import _extends from "@babel/runtime/helpers/extends";
//
// Copyright IBM Corp. 2020, 2021
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//
import React from 'react';
import PropTypes from 'prop-types';
import { Card } from '../Card';
import { pkg } from '../../settings';
import { prepareProps } from '../../global/js/utils/props-helper';
var componentName = 'ProductiveCard';
export var ProductiveCard = function ProductiveCard(props) {
  var validProps = prepareProps(props, ['media', 'mediaPosition', 'onSecondaryButtonClick', 'pictogram', 'primaryButtonClick', 'productive', 'secondaryButtonKind', 'secondaryButtonText']);
  return /*#__PURE__*/React.createElement(Card, _extends({}, validProps, {
    productive: true
  }));
}; // Return a placeholder if not released and not enabled by feature flag

ProductiveCard = pkg.checkComponentEnabled(ProductiveCard, componentName);
ProductiveCard.propTypes = {
  /**
   * Icons that are displayed on card. Refer to design documentation for implementation guidelines
   */
  actionIcons: PropTypes.arrayOf(PropTypes.shape({
    id: PropTypes.string,
    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
    onKeyDown: PropTypes.func,
    onClick: PropTypes.func,
    iconDescription: PropTypes.string
  })),

  /**
   * Determines if the action icons are on the top or bottom of the card
   */
  actionIconsPosition: PropTypes.oneOf(['top', 'bottom']),

  /**
   * Optional header caption
   */
  caption: PropTypes.string,

  /**
   * Content that shows in the body of the card
   */
  children: PropTypes.node,

  /**
   * Optional user provided class
   */
  className: PropTypes.string,

  /**
   * Designates which zones of the card are clickable. Refer to design documentation for implementation guidelines
   */
  clickZone: PropTypes.oneOf(['one', 'two', 'three']),

  /**
   * Optional label for the top of the card
   */
  label: PropTypes.string,

  /**
   * Provides the callback for a clickable card
   */
  onClick: PropTypes.func,

  /**
   * Function that's called from the primary button or action icon
   */
  onPrimaryButtonClick: PropTypes.func,

  /**
   * Use an overflow menu instead of action icons. Refer to design documentation for implementation guidelines
   */
  overflowActions: PropTypes.arrayOf(PropTypes.shape({
    id: PropTypes.string,
    itemText: PropTypes.string,
    onClick: PropTypes.func,
    onKeyDown: PropTypes.func
  })),

  /**
   * The text that's displayed in the primary button
   */
  primaryButtonText: PropTypes.string,

  /**
   * Title that's displayed at the top of the card
   */
  title: PropTypes.string,

  /**
   * Determines title size
   */
  titleSize: PropTypes.oneOf(['default', 'large'])
};
ProductiveCard.defaultProps = {
  actionIcons: [],
  actionIconsPosition: 'top',
  clickZone: 'one',
  overflowActions: [],
  titleSize: 'default'
};
ProductiveCard.displayName = componentName;