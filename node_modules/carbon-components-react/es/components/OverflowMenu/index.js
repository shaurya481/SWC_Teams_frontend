function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import { default as OverflowMenuNext } from './next/OverflowMenu';
import { default as OverflowMenuClassic } from './OverflowMenu';
import { useFeatureFlag } from '../FeatureFlags';
var OverflowMenu = /*#__PURE__*/React.forwardRef(function OverflowMenu(props, ref) {
  var enabled = useFeatureFlag('enable-v11-release');

  if (enabled) {
    return /*#__PURE__*/React.createElement(OverflowMenuNext, props);
  }

  return /*#__PURE__*/React.createElement(OverflowMenuClassic, _extends({}, props, {
    ref: ref
  }));
});
export default OverflowMenu;