"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = _interopRequireDefault(require("react"));

var _Menu = _interopRequireWildcard(require("../Menu"));

var _enzyme = require("enzyme");

var _carbonComponents = require("carbon-components");

var _windowOrGlobal = require("window-or-global");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var prefix = _carbonComponents.settings.prefix;
(0, _windowOrGlobal.describe)('Menu', function () {
  (0, _windowOrGlobal.describe)('renders as expected', function () {
    (0, _windowOrGlobal.describe)('menu', function () {
      it('receives the expected classes when closed', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.default, null));
        var container = wrapper.childAt(0).childAt(0);
        (0, _windowOrGlobal.expect)(container.hasClass("".concat(prefix, "--menu"))).toBe(true);
        (0, _windowOrGlobal.expect)(container.hasClass("".concat(prefix, "--menu--open"))).toBe(false);
      });
      it('receives the expected classes when opened', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.default, {
          open: true
        }));
        var container = wrapper.childAt(0).childAt(0);
        (0, _windowOrGlobal.expect)(container.hasClass("".concat(prefix, "--menu"))).toBe(true);
        (0, _windowOrGlobal.expect)(container.hasClass("".concat(prefix, "--menu--open"))).toBe(true);
      });
    });
    (0, _windowOrGlobal.describe)('option', function () {
      it('receives the expected classes', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Copy"
        }));
        var container = wrapper.childAt(0).childAt(0);
        (0, _windowOrGlobal.expect)(container.hasClass("".concat(prefix, "--menu-option"))).toBe(true);
      });
      it('renders props.label', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Copy"
        }));
        (0, _windowOrGlobal.expect)(wrapper.find("span.".concat(prefix, "--menu-option__label")).text()).toBe('Copy');
        (0, _windowOrGlobal.expect)(wrapper.find("span.".concat(prefix, "--menu-option__label")).prop('title')).toBe('Copy');
      });
      it('renders props.shortcut when provided', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Copy",
          shortcut: "\u2318C"
        }));
        (0, _windowOrGlobal.expect)(wrapper.find("div.".concat(prefix, "--menu-option__info")).length).toBeGreaterThan(0);
        (0, _windowOrGlobal.expect)(wrapper.find("div.".concat(prefix, "--menu-option__info")).text()).toBe('âŒ˜C');
      });
      it('respects props.disabled', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Copy",
          disabled: true
        }));
        var content = wrapper.find("div.".concat(prefix, "--menu-option__content"));
        (0, _windowOrGlobal.expect)(content.hasClass("".concat(prefix, "--menu-option__content--disabled"))).toBe(true);
        (0, _windowOrGlobal.expect)(wrapper.find("li.".concat(prefix, "--menu-option")).prop('aria-disabled')).toBe(true);
      });
      it('supports danger kind', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Delete",
          kind: "danger"
        }));
        var option = wrapper.find(".".concat(prefix, "--menu-option"));
        (0, _windowOrGlobal.expect)(option.hasClass("".concat(prefix, "--menu-option--danger"))).toBe(true);
      });
      it('renders props.children as submenu', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.default, null, /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Format"
        }, /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Bold"
        }), /*#__PURE__*/_react.default.createElement(_Menu.MenuItem, {
          label: "Italic"
        }))));
        var level1 = wrapper.find("li.".concat(prefix, "--menu-option")).at(0);
        (0, _windowOrGlobal.expect)(level1.find("ul.".concat(prefix, "--menu")).length).toBeGreaterThan(0);
      });
    });
    (0, _windowOrGlobal.describe)('radiogroup', function () {
      it('children have role "menuitemradio"', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuRadioGroup, {
          label: "Share with",
          items: ['None', 'All']
        }));
        var options = wrapper.find("li.".concat(prefix, "--menu-option"));
        (0, _windowOrGlobal.expect)(options.every('li[role="menuitemradio"]')).toBe(true);
      });
    });
    (0, _windowOrGlobal.describe)('selectable', function () {
      it('has role "menuitemcheckbox"', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuSelectableItem, {
          label: "Publish"
        }));
        var container = wrapper.childAt(0);
        (0, _windowOrGlobal.expect)(container.prop('role')).toBe('menuitemcheckbox');
      });
    });
    (0, _windowOrGlobal.describe)('divider', function () {
      it('receives the expected classes', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuDivider, null));
        var container = wrapper.childAt(0);
        (0, _windowOrGlobal.expect)(container.hasClass("".concat(prefix, "--menu-divider"))).toBe(true);
      });
      it('has role "separator"', function () {
        var wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_Menu.MenuDivider, null));
        var container = wrapper.childAt(0);
        (0, _windowOrGlobal.expect)(container.prop('role')).toBe('separator');
      });
    });
  });
});