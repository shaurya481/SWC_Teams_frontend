{"ast":null,"code":"/**\n * Copyright IBM Corp. 2021, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pkg } from '../../settings';\nimport { CREATE_FULL_PAGE_STEP } from './constants.js';\nvar componentName = 'CreateFullPageStep';\nvar blockClass = \"\".concat(pkg.prefix, \"--create-full-page__step\");\nimport { Row, Column, Form } from 'carbon-components-react';\nexport var CreateFullPageStep = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      description = _ref.description,\n      _ref$hasForm = _ref.hasForm,\n      hasForm = _ref$hasForm === void 0 ? true : _ref$hasForm;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(blockClass, className),\n    ref: ref\n  }, title ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(blockClass, \"-text-content\")\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"\".concat(blockClass, \"-title\")\n  }, title), subtitle && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"\".concat(blockClass, \"-subtitle\")\n  }, subtitle), description && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(blockClass, \"-description\")\n  }, description)))), hasForm && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Form, {\n    className: \"\".concat(blockClass, \"-form\")\n  }, children)))) : children);\n}); // Return a placeholder if not released and not enabled by feature flag\n\nCreateFullPageStep = pkg.checkComponentEnabled(CreateFullPageStep, componentName);\nCreateFullPageStep.propTypes = {\n  /**\n   * Content that shows in the CreateFullPage step\n   */\n  children: PropTypes.node,\n\n  /**\n   * Sets an optional className to be added to the CreateFullPage step\n   */\n  className: PropTypes.string,\n\n  /**\n   * Sets an optional description for a create full page step\n   */\n  description: PropTypes.node,\n\n  /**\n   * This will conditionally disable the submit button in the multi step CreateFullPage\n   */\n  disableSubmit: PropTypes.bool,\n\n  /**\n   * This will conditionally render form content below the step condition. This is defaulted to true\n   */\n  hasForm: PropTypes.bool,\n\n  /**\n   * Optional function to be called on a step change.\n   * For example, this can be used to validate input fields before proceeding to the next step.\n   * This function can _optionally_ return a promise that is either resolved or rejected and the CreateFullPage will handle the submitting state of the next button.\n   */\n  onNext: PropTypes.func,\n\n  /**\n   * Sets the subtitle text for a create full page step\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Sets the title text for a create full page step\n   */\n  title: PropTypes.node.isRequired\n}; // Default values for component props. Default values are not required for\n// props that are required, nor for props where the component can apply\n// 'undefined' values reasonably. Default values should be provided when the\n// component needs to make a choice or assumption when a prop is not supplied.\n\nCreateFullPageStep.defaultProps = {\n  type: CREATE_FULL_PAGE_STEP\n};","map":null,"metadata":{},"sourceType":"module"}