{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _defineProperty2, _ModalBody$propTypes;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport ButtonSet from '../ButtonSet';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20 } from '@carbon/icons-react';\nimport toggleClass from '../../tools/toggleClass';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy';\nimport wrapFocus from '../../internal/wrapFocus';\nvar prefix = settings.prefix;\n\nvar ComposedModal = /*#__PURE__*/function (_Component) {\n  _inherits(ComposedModal, _Component);\n\n  var _super = _createSuper(ComposedModal);\n\n  function ComposedModal() {\n    var _this;\n\n    _classCallCheck(this, ComposedModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"outerModal\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"innerModal\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"button\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"startSentinel\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"endSentinel\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (evt) {\n      // Esc key\n      if (evt.which === 27) {\n        _this.closeModal(evt);\n      }\n\n      _this.props.onKeyDown(evt);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (evt) {\n      if (!_this.innerModal.current.contains(evt.target) && _this.props.preventCloseOnClickOutside) {\n        return;\n      }\n\n      if (_this.innerModal.current && !_this.innerModal.current.contains(evt.target)) {\n        _this.closeModal(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function (_ref) {\n      var oldActiveNode = _ref.target,\n          currentActiveNode = _ref.relatedTarget;\n      var _this$props = _this.props,\n          open = _this$props.open,\n          selectorsFloatingMenus = _this$props.selectorsFloatingMenus;\n\n      if (open && currentActiveNode && oldActiveNode) {\n        var bodyNode = _this.innerModal.current;\n        var startSentinelNode = _this.startSentinel.current;\n        var endSentinelNode = _this.endSentinel.current;\n        wrapFocus({\n          bodyNode: bodyNode,\n          startSentinelNode: startSentinelNode,\n          endSentinelNode: endSentinelNode,\n          currentActiveNode: currentActiveNode,\n          oldActiveNode: oldActiveNode,\n          selectorsFloatingMenus: selectorsFloatingMenus\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusButton\", function (focusContainerElement) {\n      if (focusContainerElement) {\n        var primaryFocusElement = focusContainerElement.querySelector(_this.props.selectorPrimaryFocus);\n\n        if (primaryFocusElement) {\n          primaryFocusElement.focus();\n          return;\n        }\n\n        if (_this.button.current) {\n          _this.button.current.focus();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionEnd\", function (evt) {\n      if (_this.outerModal.current.offsetWidth && _this.outerModal.current.offsetHeight && _this.beingOpen) {\n        _this.focusButton(evt.currentTarget);\n\n        _this.beingOpen = false;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function (evt) {\n      var onClose = _this.props.onClose;\n\n      if (!onClose || onClose(evt) !== false) {\n        _this.setState({\n          open: false\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ComposedModal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!prevState.open && this.state.open) {\n        this.beingOpen = true;\n      } else if (prevState.open && !this.state.open) {\n        this.beingOpen = false;\n      }\n\n      if (prevState.open !== this.state.open) {\n        toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), this.state.open);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), false);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), this.props.open);\n\n      if (!this.props.open) {\n        return;\n      }\n\n      if (this.innerModal.current) {\n        this.focusButton(this.innerModal.current);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _this2 = this;\n\n      var open = this.state.open;\n\n      var _this$props2 = this.props,\n          ariaLabelledBy = _this$props2['aria-labelledby'],\n          ariaLabel = _this$props2['aria-label'],\n          className = _this$props2.className,\n          containerClassName = _this$props2.containerClassName,\n          children = _this$props2.children,\n          danger = _this$props2.danger,\n          preventCloseOnClickOutside = _this$props2.preventCloseOnClickOutside,\n          selectorPrimaryFocus = _this$props2.selectorPrimaryFocus,\n          size = _this$props2.size,\n          other = _objectWithoutProperties(_this$props2, [\"aria-labelledby\", \"aria-label\", \"className\", \"containerClassName\", \"children\", \"danger\", \"preventCloseOnClickOutside\", \"selectorPrimaryFocus\", \"size\"]);\n\n      var modalClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--modal\"), true), _defineProperty(_classNames, 'is-visible', open), _defineProperty(_classNames, className, className), _defineProperty(_classNames, \"\".concat(prefix, \"--modal--danger\"), danger), _classNames));\n      var containerClass = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--modal-container\"), true), _defineProperty(_classNames2, \"\".concat(prefix, \"--modal-container--\").concat(size), size), _defineProperty(_classNames2, containerClassName, containerClassName), _classNames2)); // Generate aria-label based on Modal Header label if one is not provided (L253)\n\n      var generatedAriaLabel;\n      var childrenWithProps = React.Children.toArray(children).map(function (child) {\n        switch (child.type) {\n          case /*#__PURE__*/React.createElement(ModalHeader).type:\n            generatedAriaLabel = child.props.label;\n            return /*#__PURE__*/React.cloneElement(child, {\n              closeModal: _this2.closeModal\n            });\n\n          case /*#__PURE__*/React.createElement(ModalFooter).type:\n            return /*#__PURE__*/React.cloneElement(child, {\n              closeModal: _this2.closeModal,\n              inputref: _this2.button\n            });\n\n          default:\n            return child;\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, other, {\n        role: \"presentation\",\n        ref: this.outerModal,\n        onBlur: this.handleBlur,\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        onTransitionEnd: open ? this.handleTransitionEnd : undefined,\n        className: modalClass\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        ref: this.startSentinel,\n        tabIndex: \"0\",\n        role: \"link\",\n        className: \"\".concat(prefix, \"--visually-hidden\")\n      }, \"Focus sentinel\"), /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.innerModal,\n        className: containerClass,\n        role: \"dialog\",\n        \"aria-modal\": \"true\",\n        \"aria-label\": ariaLabel ? ariaLabel : generatedAriaLabel,\n        \"aria-labelledby\": ariaLabelledBy\n      }, childrenWithProps), /*#__PURE__*/React.createElement(\"span\", {\n        ref: this.endSentinel,\n        tabIndex: \"0\",\n        role: \"link\",\n        className: \"\".concat(prefix, \"--visually-hidden\")\n      }, \"Focus sentinel\"));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var open = _ref2.open;\n      var prevOpen = state.prevOpen;\n      return prevOpen === open ? null : {\n        open: open,\n        prevOpen: open\n      };\n    }\n  }]);\n\n  return ComposedModal;\n}(Component);\n\n_defineProperty(ComposedModal, \"defaultProps\", {\n  onKeyDown: function onKeyDown() {},\n  selectorPrimaryFocus: '[data-modal-primary-focus]'\n});\n\n_defineProperty(ComposedModal, \"propTypes\", (_defineProperty2 = {}, _defineProperty(_defineProperty2, 'aria-label', PropTypes.string), _defineProperty(_defineProperty2, 'aria-labelledby', PropTypes.string), _defineProperty(_defineProperty2, \"children\", PropTypes.node), _defineProperty(_defineProperty2, \"className\", PropTypes.string), _defineProperty(_defineProperty2, \"containerClassName\", PropTypes.string), _defineProperty(_defineProperty2, \"danger\", PropTypes.bool), _defineProperty(_defineProperty2, \"onClose\", PropTypes.func), _defineProperty(_defineProperty2, \"onKeyDown\", PropTypes.func), _defineProperty(_defineProperty2, \"open\", PropTypes.bool), _defineProperty(_defineProperty2, \"preventCloseOnClickOutside\", PropTypes.bool), _defineProperty(_defineProperty2, \"selectorPrimaryFocus\", PropTypes.string), _defineProperty(_defineProperty2, \"selectorsFloatingMenus\", PropTypes.string), _defineProperty(_defineProperty2, \"size\", PropTypes.oneOf(['xs', 'sm', 'md', 'lg'])), _defineProperty2));\n\nexport { ComposedModal as default };\nexport var ModalHeader = /*#__PURE__*/function (_Component2) {\n  _inherits(ModalHeader, _Component2);\n\n  var _super2 = _createSuper(ModalHeader);\n\n  function ModalHeader() {\n    var _this3;\n\n    _classCallCheck(this, ModalHeader);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this3), \"handleCloseButtonClick\", function (evt) {\n      _this3.props.closeModal(evt);\n\n      _this3.props.buttonOnClick();\n    });\n\n    return _this3;\n  }\n\n  _createClass(ModalHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames3, _classNames4, _classNames5, _classNames6, _classNames7;\n\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          labelClassName = _this$props3.labelClassName,\n          titleClassName = _this$props3.titleClassName,\n          closeClassName = _this$props3.closeClassName,\n          closeIconClassName = _this$props3.closeIconClassName,\n          label = _this$props3.label,\n          title = _this$props3.title,\n          children = _this$props3.children,\n          iconDescription = _this$props3.iconDescription,\n          closeModal = _this$props3.closeModal,\n          buttonOnClick = _this$props3.buttonOnClick,\n          preventCloseOnClickOutside = _this$props3.preventCloseOnClickOutside,\n          other = _objectWithoutProperties(_this$props3, [\"className\", \"labelClassName\", \"titleClassName\", \"closeClassName\", \"closeIconClassName\", \"label\", \"title\", \"children\", \"iconDescription\", \"closeModal\", \"buttonOnClick\", \"preventCloseOnClickOutside\"]);\n\n      var headerClass = classNames((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--modal-header\"), true), _defineProperty(_classNames3, className, className), _classNames3));\n      var labelClass = classNames((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--modal-header__label \").concat(prefix, \"--type-delta\"), true), _defineProperty(_classNames4, labelClassName, labelClassName), _classNames4));\n      var titleClass = classNames((_classNames5 = {}, _defineProperty(_classNames5, \"\".concat(prefix, \"--modal-header__heading \").concat(prefix, \"--type-beta\"), true), _defineProperty(_classNames5, titleClassName, titleClassName), _classNames5));\n      var closeClass = classNames((_classNames6 = {}, _defineProperty(_classNames6, \"\".concat(prefix, \"--modal-close\"), true), _defineProperty(_classNames6, closeClassName, closeClassName), _classNames6));\n      var closeIconClass = classNames((_classNames7 = {}, _defineProperty(_classNames7, \"\".concat(prefix, \"--modal-close__icon\"), true), _defineProperty(_classNames7, closeIconClassName, closeIconClassName), _classNames7));\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        className: headerClass\n      }, other), label && /*#__PURE__*/React.createElement(\"h2\", {\n        className: labelClass\n      }, label), title && /*#__PURE__*/React.createElement(\"h3\", {\n        className: titleClass\n      }, title), children, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleCloseButtonClick,\n        className: closeClass,\n        title: iconDescription,\n        \"aria-label\": iconDescription,\n        type: \"button\"\n      }, /*#__PURE__*/React.createElement(Close20, {\n        className: closeIconClass\n      })));\n    }\n  }]);\n\n  return ModalHeader;\n}(Component);\n\n_defineProperty(ModalHeader, \"propTypes\", {\n  /**\n   * Provide an optional function to be called when the close button is\n   * clicked\n   */\n  buttonOnClick: PropTypes.func,\n\n  /**\n   * Specify the content to be placed in the ModalHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the modal header\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the modal close node\n   */\n  closeClassName: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the modal close icon node\n   */\n  closeIconClassName: PropTypes.string,\n\n  /**\n   * Provide an optional function to be called when the modal is closed\n   */\n  closeModal: PropTypes.func,\n\n  /**\n   * Specify a description for the close icon that can be read by screen\n   * readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional label to be displayed\n   */\n  label: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the modal header label\n   */\n  labelClassName: PropTypes.string,\n\n  /**\n   * Specify an optional title to be displayed\n   */\n  title: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the modal heading\n   */\n  titleClassName: PropTypes.string\n});\n\n_defineProperty(ModalHeader, \"defaultProps\", {\n  iconDescription: 'Close',\n  buttonOnClick: function buttonOnClick() {}\n});\n\nexport function ModalBody(props) {\n  var _classNames8;\n\n  var className = props.className,\n      children = props.children,\n      hasForm = props.hasForm,\n      hasScrollingContent = props.hasScrollingContent,\n      preventCloseOnClickOutside = props.preventCloseOnClickOutside,\n      other = _objectWithoutProperties(props, [\"className\", \"children\", \"hasForm\", \"hasScrollingContent\", \"preventCloseOnClickOutside\"]);\n\n  var contentClass = classNames((_classNames8 = {}, _defineProperty(_classNames8, \"\".concat(prefix, \"--modal-content\"), true), _defineProperty(_classNames8, \"\".concat(prefix, \"--modal-content--with-form\"), hasForm), _defineProperty(_classNames8, \"\".concat(prefix, \"--modal-scroll-content\"), hasScrollingContent), _defineProperty(_classNames8, className, className), _classNames8));\n  var hasScrollingContentProps = hasScrollingContent ? {\n    tabIndex: 0,\n    role: 'region'\n  } : {};\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: contentClass\n  }, hasScrollingContentProps, other), children), hasScrollingContent && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--modal-content--overflow-indicator\")\n  }));\n}\nModalBody.propTypes = (_ModalBody$propTypes = {}, _defineProperty(_ModalBody$propTypes, 'aria-label', requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string)), _defineProperty(_ModalBody$propTypes, \"children\", PropTypes.node), _defineProperty(_ModalBody$propTypes, \"className\", PropTypes.string), _defineProperty(_ModalBody$propTypes, \"hasForm\", PropTypes.bool), _defineProperty(_ModalBody$propTypes, \"hasScrollingContent\", PropTypes.bool), _ModalBody$propTypes);\nexport var ModalFooter = /*#__PURE__*/function (_Component3) {\n  _inherits(ModalFooter, _Component3);\n\n  var _super3 = _createSuper(ModalFooter);\n\n  function ModalFooter() {\n    var _this4;\n\n    _classCallCheck(this, ModalFooter);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this4 = _super3.call.apply(_super3, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this4), \"handleRequestClose\", function (evt) {\n      _this4.props.closeModal(evt);\n\n      _this4.props.onRequestClose(evt);\n    });\n\n    return _this4;\n  }\n\n  _createClass(ModalFooter, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames9,\n          _this5 = this;\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          primaryClassName = _this$props4.primaryClassName,\n          secondaryButtons = _this$props4.secondaryButtons,\n          secondaryClassName = _this$props4.secondaryClassName,\n          secondaryButtonText = _this$props4.secondaryButtonText,\n          primaryButtonText = _this$props4.primaryButtonText,\n          primaryButtonDisabled = _this$props4.primaryButtonDisabled,\n          closeModal = _this$props4.closeModal,\n          onRequestClose = _this$props4.onRequestClose,\n          onRequestSubmit = _this$props4.onRequestSubmit,\n          children = _this$props4.children,\n          danger = _this$props4.danger,\n          inputref = _this$props4.inputref,\n          other = _objectWithoutProperties(_this$props4, [\"className\", \"primaryClassName\", \"secondaryButtons\", \"secondaryClassName\", \"secondaryButtonText\", \"primaryButtonText\", \"primaryButtonDisabled\", \"closeModal\", \"onRequestClose\", \"onRequestSubmit\", \"children\", \"danger\", \"inputref\"]);\n\n      var footerClass = classNames((_classNames9 = {}, _defineProperty(_classNames9, \"\".concat(prefix, \"--modal-footer\"), true), _defineProperty(_classNames9, className, className), _defineProperty(_classNames9, \"\".concat(prefix, \"--modal-footer--three-button\"), Array.isArray(secondaryButtons) && secondaryButtons.length === 2), _classNames9));\n      var primaryClass = classNames(_defineProperty({}, primaryClassName, primaryClassName));\n      var secondaryClass = classNames(_defineProperty({}, secondaryClassName, secondaryClassName));\n\n      var SecondaryButtonSet = function SecondaryButtonSet() {\n        if (Array.isArray(secondaryButtons) && secondaryButtons.length <= 2) {\n          return secondaryButtons.map(function (_ref3, i) {\n            var buttonText = _ref3.buttonText,\n                onButtonClick = _ref3.onClick;\n            return /*#__PURE__*/React.createElement(Button, {\n              key: \"\".concat(buttonText, \"-\").concat(i),\n              className: secondaryClass,\n              kind: \"secondary\",\n              onClick: onButtonClick || _this5.handleRequestClose\n            }, buttonText);\n          });\n        }\n\n        if (secondaryButtonText) {\n          return /*#__PURE__*/React.createElement(Button, {\n            className: secondaryClass,\n            onClick: _this5.handleRequestClose,\n            kind: \"secondary\"\n          }, secondaryButtonText);\n        }\n\n        return null;\n      };\n\n      return /*#__PURE__*/React.createElement(ButtonSet, _extends({\n        className: footerClass\n      }, other), /*#__PURE__*/React.createElement(SecondaryButtonSet, null), primaryButtonText && /*#__PURE__*/React.createElement(Button, {\n        onClick: onRequestSubmit,\n        className: primaryClass,\n        disabled: primaryButtonDisabled,\n        kind: danger ? 'danger' : 'primary',\n        ref: inputref\n      }, primaryButtonText), children);\n    }\n  }]);\n\n  return ModalFooter;\n}(Component);\n\n_defineProperty(ModalFooter, \"propTypes\", {\n  /**\n   * Pass in content that will be rendered in the Modal Footer\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the Modal Footer container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify an optional function that is called whenever the modal is closed\n   */\n  closeModal: PropTypes.func,\n\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n\n  /**\n   * The `ref` callback for the primary button.\n   */\n  inputref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * closed\n   */\n  onRequestClose: PropTypes.func,\n\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * submitted\n   */\n  onRequestSubmit: PropTypes.func,\n\n  /**\n   * Specify whether the primary button should be disabled\n   */\n  primaryButtonDisabled: PropTypes.bool,\n\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.string,\n\n  /**\n   * Specify a custom className to be applied to the primary button\n   */\n  primaryClassName: PropTypes.string,\n\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.string,\n\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: function secondaryButtons(props, propName, componentName) {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(\"\".concat(propName, \" needs to be an array of two button config objects\"));\n      }\n\n      var shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(function (secondaryButton) {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n\n    return null;\n  },\n\n  /**\n   * Specify a custom className to be applied to the secondary button\n   */\n  secondaryClassName: PropTypes.string\n});\n\n_defineProperty(ModalFooter, \"defaultProps\", {\n  onRequestClose: function onRequestClose() {},\n  onRequestSubmit: function onRequestSubmit() {}\n});","map":null,"metadata":{},"sourceType":"module"}