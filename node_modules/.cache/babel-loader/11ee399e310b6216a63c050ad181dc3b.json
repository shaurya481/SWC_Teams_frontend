{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\n\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tab, _React$Component);\n\n  var _super = _createSuper(Tab);\n\n  function Tab() {\n    _classCallCheck(this, Tab);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Tab, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _this = this,\n          _buttonProps;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          className = _this$props.className,\n          handleTabClick = _this$props.handleTabClick,\n          handleTabKeyDown = _this$props.handleTabKeyDown,\n          disabled = _this$props.disabled,\n          _this$props$href = _this$props.href,\n          href = _this$props$href === void 0 ? '#' : _this$props$href,\n          index = _this$props.index,\n          label = _this$props.label,\n          selected = _this$props.selected,\n          _this$props$tabIndex = _this$props.tabIndex,\n          tabIndex = _this$props$tabIndex === void 0 ? 0 : _this$props$tabIndex,\n          _onClick = _this$props.onClick,\n          _onKeyDown = _this$props.onKeyDown,\n          renderAnchor = _this$props.renderAnchor,\n          renderButton = _this$props.renderButton,\n          renderContent = _this$props.renderContent,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"className\", \"handleTabClick\", \"handleTabKeyDown\", \"disabled\", \"href\", \"index\", \"label\", \"selected\", \"tabIndex\", \"onClick\", \"onKeyDown\", \"renderAnchor\", \"renderButton\", \"renderContent\"]);\n\n      var classes = classNames(className, // TODO: remove scrollable in next major release\n      // `${prefix}--tabs__nav-item`,\n      \"\".concat(prefix, \"--tabs--scrollable__nav-item\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--tabs__nav-item--disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--tabs__nav-item--selected\"), selected), _defineProperty(_classNames, \"\".concat(prefix, \"--tabs--scrollable__nav-item--disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--tabs--scrollable__nav-item--selected\"), selected), _classNames));\n      var buttonProps = (_buttonProps = {}, _defineProperty(_buttonProps, 'aria-selected', selected), _defineProperty(_buttonProps, 'aria-disabled', disabled), _defineProperty(_buttonProps, 'aria-controls', id && \"\".concat(id, \"__panel\")), _defineProperty(_buttonProps, \"id\", id), _defineProperty(_buttonProps, \"className\", \"\".concat(prefix, \"--tabs--scrollable__nav-link\")), _defineProperty(_buttonProps, \"href\", href), _defineProperty(_buttonProps, \"tabIndex\", !disabled ? tabIndex : -1), _defineProperty(_buttonProps, \"ref\", function ref(e) {\n        _this.tabAnchor = e;\n      }), _buttonProps);\n      var renderElement = renderButton || renderAnchor;\n      return /*#__PURE__*/React.createElement(\"li\", _extends({}, other, {\n        className: classes,\n        onClick: function onClick(evt) {\n          if (disabled) {\n            return;\n          }\n\n          if (handleTabClick) {\n            handleTabClick(index, evt);\n          }\n\n          _onClick(evt);\n        },\n        onKeyDown: function onKeyDown(evt) {\n          if (disabled) {\n            return;\n          }\n\n          if (handleTabKeyDown) {\n            handleTabKeyDown(index, evt);\n          }\n\n          _onKeyDown(evt);\n        },\n        role: \"presentation\"\n      }), renderElement ? renderElement(buttonProps) : /*#__PURE__*/React.createElement(\"button\", _extends({\n        type: \"button\",\n        role: \"tab\"\n      }, buttonProps), label));\n    }\n  }]);\n\n  return Tab;\n}(React.Component);\n\n_defineProperty(Tab, \"propTypes\", {\n  /**\n   * Specify an optional className to be added to your Tab\n   */\n  className: PropTypes.string,\n\n  /**\n   * Whether your Tab is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A handler that is invoked when a user clicks on the control.\n   * Reserved for usage in Tabs\n   */\n  handleTabClick: PropTypes.func,\n\n  /**\n   * A handler that is invoked on the key down event for the control.\n   * Reserved for usage in Tabs\n   */\n  handleTabKeyDown: PropTypes.func,\n\n  /**\n   * Provide a string that represents the `href` of the Tab\n   */\n  href: deprecate(PropTypes.string),\n\n  /**\n   * The element ID for the top-level element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The index of your Tab in your Tabs. Reserved for usage in Tabs\n   */\n  index: PropTypes.number,\n\n  /**\n   * Provide the contents of your Tab\n   */\n  label: PropTypes.node,\n\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func.isRequired,\n\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func.isRequired,\n\n  /*\n   * An optional parameter to allow overriding the anchor rendering.\n   * Useful for using Tab along with react-router or other client\n   * side router libraries.\n   **/\n  renderAnchor: deprecate(PropTypes.func),\n  renderButton: PropTypes.func,\n\n  /*\n   * An optional parameter to allow overriding the content rendering.\n   **/\n  renderContent: PropTypes.func,\n\n  /**\n   * Provide an accessibility role for your Tab\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Whether your Tab is selected.\n   * Reserved for usage in Tabs\n   */\n  selected: PropTypes.bool.isRequired,\n\n  /**\n   * Specify the tab index of the `<button>` node\n   */\n  tabIndex: PropTypes.number\n});\n\n_defineProperty(Tab, \"defaultProps\", {\n  role: 'presentation',\n  label: 'provide a label',\n  selected: false,\n  onClick: function onClick() {},\n  onKeyDown: function onKeyDown() {}\n});\n\nexport { Tab as default };","map":null,"metadata":{},"sourceType":"module"}