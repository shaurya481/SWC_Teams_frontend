{"ast":null,"code":"import { px, baseFontSize, rem, breakpoint, breakpoints } from '@carbon/layout';\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\n// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\n\nvar fontFamilies = {\n  mono: \"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\",\n  sans: \"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\",\n  sansCondensed: \"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\",\n  sansHebrew: \"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\",\n  serif: \"'IBM Plex Serif', 'Georgia', Times, serif\"\n};\n\nfunction fontFamily(name) {\n  if (!fontFamilies[name]) {\n    throw new Error(\"Unable to find font family: `\".concat(name, \"`. Expected one of: \") + \"[\".concat(Object.keys(fontFamilies).join(', '), \"]\"));\n  }\n\n  return {\n    fontFamily: fontFamilies[name]\n  };\n}\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar fontWeights = {\n  light: 300,\n  regular: 400,\n  semibold: 600\n};\n\nfunction fontWeight(weight) {\n  if (!fontWeights[weight]) {\n    throw new Error(\"Unable to find font weight: `\".concat(weight, \"`. Expected one of: \") + \"[\".concat(Object.keys(fontWeights).join(', '), \"]\"));\n  }\n\n  return {\n    fontWeight: fontWeights[weight]\n  };\n}\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction print(block) {\n  return Object.keys(block).reduce(function (acc, key, index) {\n    // Short-circuit on the foreign key 'breakpoints'. This is used in our\n    // tokens for fluid type and should not be printed. In the future, we should\n    // tie this to media query outputs.\n    if (key === 'breakpoints') {\n      return acc;\n    }\n\n    var property = \"\".concat(paramCase(key), \": \").concat(block[key], \";\");\n\n    if (index === 0) {\n      return property;\n    }\n\n    return acc + '\\n' + property;\n  }, '');\n}\n\nfunction paramCase(string) {\n  var result = '';\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (character === character.toUpperCase()) {\n      result += '-' + character.toLowerCase();\n      continue;\n    }\n\n    result += character;\n  }\n\n  return result;\n}\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar reset = {\n  html: {\n    fontSize: px(baseFontSize)\n  },\n  body: {\n    fontFamily: fontFamilies.sans,\n    fontWeight: fontWeights.regular,\n    textRendering: 'optimizeLegibility',\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale'\n  },\n  strong: {\n    fontWeight: fontWeights.semibold\n  },\n  code: {\n    fontFamily: fontFamilies.mono\n  }\n};\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Get the type size for the given step\n * @param {number} step\n * @returns {number}\n */\n\nfunction getTypeSize(step) {\n  if (step <= 1) {\n    return 12;\n  } // Yn = Yn-1 + {FLOOR[(n - 2) / 4] + 1} * 2\n\n\n  return getTypeSize(step - 1) + Math.floor((step - 2) / 4 + 1) * 2;\n}\n/**\n * The default type scale for 23 steps. Inlined as an array here through running\n * the follow step:\n *\n * > Array.from({ length: 23 }, (_, i) => getTypeSize(i + 1))\n */\n\n\nvar scale = [12, 14, 16, 18, 20, 24, 28, 32, 36, 42, 48, 54, 60, 68, 76, 84, 92, 102, 112, 122, 132, 144, 156];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar caption01$1 = {\n  fontSize: rem(scale[0]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.34,\n  letterSpacing: px(0.32)\n};\nvar caption02$1 = {\n  fontSize: rem(scale[1]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.29,\n  letterSpacing: px(0.32)\n};\nvar label01$1 = {\n  fontSize: rem(scale[0]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.34,\n  letterSpacing: px(0.32)\n};\nvar label02$1 = {\n  fontSize: rem(scale[1]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.29,\n  letterSpacing: px(0.32)\n};\nvar helperText01$1 = {\n  fontSize: rem(scale[0]),\n  lineHeight: 1.34,\n  letterSpacing: px(0.32)\n};\nvar helperText02$1 = {\n  fontSize: rem(scale[1]),\n  lineHeight: 1.29,\n  letterSpacing: px(0.32)\n};\nvar bodyShort01$1 = {\n  fontSize: rem(scale[1]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.29,\n  letterSpacing: px(0.16)\n};\nvar bodyLong01$1 = {\n  fontSize: rem(scale[1]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.43,\n  letterSpacing: px(0.16)\n};\nvar bodyShort02$1 = {\n  fontSize: rem(scale[2]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.375,\n  letterSpacing: 0\n};\nvar bodyLong02$1 = {\n  fontSize: rem(scale[2]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.5,\n  letterSpacing: 0\n};\nvar code01$1 = {\n  fontFamily: fontFamilies.mono,\n  fontSize: rem(scale[0]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.34,\n  letterSpacing: px(0.32)\n};\nvar code02$1 = {\n  fontFamily: fontFamilies.mono,\n  fontSize: rem(scale[1]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.43,\n  letterSpacing: px(0.32)\n};\nvar heading01$1 = {\n  fontSize: rem(scale[1]),\n  fontWeight: fontWeights.semibold,\n  lineHeight: 1.29,\n  letterSpacing: px(0.16)\n};\nvar productiveHeading01$1 = heading01$1;\nvar heading02$1 = {\n  fontSize: rem(scale[2]),\n  fontWeight: fontWeights.semibold,\n  lineHeight: 1.375,\n  letterSpacing: 0\n};\nvar productiveHeading02$1 = heading02$1;\nvar productiveHeading03$1 = {\n  fontSize: rem(scale[4]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.4,\n  letterSpacing: 0\n};\nvar productiveHeading04$1 = {\n  fontSize: rem(scale[6]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.29,\n  letterSpacing: 0\n};\nvar productiveHeading05$1 = {\n  fontSize: rem(scale[7]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.25,\n  letterSpacing: 0\n};\nvar productiveHeading06$1 = {\n  fontSize: rem(scale[9]),\n  fontWeight: fontWeights.light,\n  lineHeight: 1.199,\n  letterSpacing: 0\n};\nvar productiveHeading07$1 = {\n  fontSize: rem(scale[11]),\n  fontWeight: fontWeights.light,\n  lineHeight: 1.19,\n  letterSpacing: 0\n};\n\nvar expressiveHeading01$1 = _objectSpread2(_objectSpread2({}, heading01$1), {}, {\n  lineHeight: 1.25\n});\n\nvar expressiveHeading02$1 = _objectSpread2(_objectSpread2({}, heading02$1), {}, {\n  lineHeight: 1.5\n});\n\nvar expressiveHeading03$1 = {\n  fontSize: rem(scale[4]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.4,\n  letterSpacing: 0,\n  breakpoints: {\n    xlg: {\n      fontSize: rem(scale[4]),\n      lineHeight: 1.25\n    },\n    max: {\n      fontSize: rem(scale[5]),\n      lineHeight: 1.334\n    }\n  }\n};\nvar expressiveHeading04$1 = {\n  fontSize: rem(scale[6]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.29,\n  letterSpacing: 0,\n  breakpoints: {\n    xlg: {\n      fontSize: rem(scale[6]),\n      lineHeight: 1.25\n    },\n    max: {\n      fontSize: rem(scale[7])\n    }\n  }\n};\nvar expressiveHeading05$1 = {\n  fontSize: rem(scale[7]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.25,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[8]),\n      fontWeight: fontWeights.light,\n      lineHeight: 1.22,\n      letterSpacing: 0\n    },\n    lg: {\n      fontSize: rem(scale[9]),\n      fontWeight: fontWeights.light,\n      lineHeight: 1.19,\n      letterSpacing: 0\n    },\n    xlg: {\n      fontSize: rem(scale[10]),\n      fontWeight: fontWeights.light,\n      lineHeight: 1.17,\n      letterSpacing: 0\n    },\n    max: {\n      fontSize: rem(scale[12]),\n      fontWeight: fontWeights.light,\n      letterSpacing: 0\n    }\n  }\n};\nvar expressiveHeading06$1 = {\n  fontSize: rem(scale[7]),\n  fontWeight: fontWeights.semibold,\n  lineHeight: 1.25,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[8]),\n      fontWeight: fontWeights.semibold,\n      lineHeight: 1.22,\n      letterSpacing: 0\n    },\n    lg: {\n      fontSize: rem(scale[9]),\n      fontWeight: fontWeights.semibold,\n      lineHeight: 1.19,\n      letterSpacing: 0\n    },\n    xlg: {\n      fontSize: rem(scale[10]),\n      fontWeight: fontWeights.semibold,\n      lineHeight: 1.17,\n      letterSpacing: 0\n    },\n    max: {\n      fontSize: rem(scale[12]),\n      fontWeight: fontWeights.semibold,\n      letterSpacing: 0\n    }\n  }\n};\nvar expressiveParagraph01$1 = {\n  fontSize: rem(scale[5]),\n  fontWeight: fontWeights.light,\n  lineHeight: 1.334,\n  letterSpacing: 0,\n  breakpoints: {\n    lg: {\n      fontSize: rem(scale[6]),\n      lineHeight: 1.29\n    },\n    max: {\n      fontSize: rem(scale[7]),\n      lineHeight: 1.25\n    }\n  }\n};\nvar quotation01$1 = {\n  fontSize: rem(scale[4]),\n  fontWeight: fontWeights.regular,\n  lineHeight: 1.3,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[4]),\n      fontWeight: fontWeights.regular,\n      letterSpacing: 0\n    },\n    lg: {\n      fontSize: rem(scale[5]),\n      fontWeight: fontWeights.regular,\n      lineHeight: 1.334,\n      letterSpacing: 0\n    },\n    xlg: {\n      fontSize: rem(scale[6]),\n      fontWeight: fontWeights.regular,\n      lineHeight: 1.29,\n      letterSpacing: 0\n    },\n    max: {\n      fontSize: rem(scale[7]),\n      fontWeight: fontWeights.regular,\n      lineHeight: 1.25,\n      letterSpacing: 0\n    }\n  }\n};\nvar quotation02$1 = {\n  fontSize: rem(scale[7]),\n  fontWeight: fontWeights.light,\n  lineHeight: 1.25,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[8]),\n      lineHeight: 1.22\n    },\n    lg: {\n      fontSize: rem(scale[9]),\n      lineHeight: 1.19\n    },\n    xlg: {\n      fontSize: rem(scale[10]),\n      lineHeight: 1.17\n    },\n    max: {\n      fontSize: rem(scale[12])\n    }\n  }\n};\nvar display01$1 = {\n  fontSize: rem(scale[9]),\n  fontWeight: fontWeights.light,\n  lineHeight: 1.19,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[9])\n    },\n    lg: {\n      fontSize: rem(scale[11])\n    },\n    xlg: {\n      fontSize: rem(scale[12]),\n      lineHeight: 1.17\n    },\n    max: {\n      fontSize: rem(scale[14]),\n      lineHeight: 1.13\n    }\n  }\n};\nvar display02$1 = {\n  fontSize: rem(scale[9]),\n  fontWeight: fontWeights.semibold,\n  lineHeight: 1.19,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[9])\n    },\n    lg: {\n      fontSize: rem(scale[11])\n    },\n    xlg: {\n      fontSize: rem(scale[12]),\n      lineHeight: 1.16\n    },\n    max: {\n      fontSize: rem(scale[14]),\n      lineHeight: 1.13\n    }\n  }\n};\nvar display03$1 = {\n  fontSize: rem(scale[9]),\n  fontWeight: fontWeights.light,\n  lineHeight: 1.19,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[13]),\n      lineHeight: 1.15\n    },\n    lg: {\n      fontSize: rem(scale[16]),\n      lineHeight: 1.11,\n      letterSpacing: px(-0.64)\n    },\n    xlg: {\n      fontSize: rem(scale[19]),\n      lineHeight: 1.07\n    },\n    max: {\n      fontSize: rem(scale[22]),\n      lineHeight: 1.05,\n      letterSpacing: px(-0.96)\n    }\n  }\n};\nvar display04$1 = {\n  fontSize: rem(scale[9]),\n  fontWeight: fontWeights.semibold,\n  lineHeight: 1.19,\n  letterSpacing: 0,\n  breakpoints: {\n    md: {\n      fontSize: rem(scale[13]),\n      lineHeight: 1.15\n    },\n    lg: {\n      fontSize: rem(scale[16]),\n      lineHeight: 1.11,\n      letterSpacing: px(-0.64)\n    },\n    xlg: {\n      fontSize: rem(scale[19]),\n      lineHeight: 1.07,\n      letterSpacing: px(-0.64)\n    },\n    max: {\n      fontSize: rem(scale[22]),\n      lineHeight: 1.05,\n      letterSpacing: px(-0.96)\n    }\n  }\n};\nvar styles = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  caption01: caption01$1,\n  caption02: caption02$1,\n  label01: label01$1,\n  label02: label02$1,\n  helperText01: helperText01$1,\n  helperText02: helperText02$1,\n  bodyShort01: bodyShort01$1,\n  bodyLong01: bodyLong01$1,\n  bodyShort02: bodyShort02$1,\n  bodyLong02: bodyLong02$1,\n  code01: code01$1,\n  code02: code02$1,\n  heading01: heading01$1,\n  productiveHeading01: productiveHeading01$1,\n  heading02: heading02$1,\n  productiveHeading02: productiveHeading02$1,\n  productiveHeading03: productiveHeading03$1,\n  productiveHeading04: productiveHeading04$1,\n  productiveHeading05: productiveHeading05$1,\n  productiveHeading06: productiveHeading06$1,\n  productiveHeading07: productiveHeading07$1,\n  expressiveHeading01: expressiveHeading01$1,\n  expressiveHeading02: expressiveHeading02$1,\n  expressiveHeading03: expressiveHeading03$1,\n  expressiveHeading04: expressiveHeading04$1,\n  expressiveHeading05: expressiveHeading05$1,\n  expressiveHeading06: expressiveHeading06$1,\n  expressiveParagraph01: expressiveParagraph01$1,\n  quotation01: quotation01$1,\n  quotation02: quotation02$1,\n  display01: display01$1,\n  display02: display02$1,\n  display03: display03$1,\n  display04: display04$1\n});\nvar breakpointNames = Object.keys(breakpoints);\n\nfunction next(name) {\n  return breakpointNames[breakpointNames.indexOf(name) + 1];\n}\n\nfunction fluid(selector) {\n  var fluidBreakpoints = selector.breakpoints,\n      styles = _objectWithoutProperties(selector, [\"breakpoints\"]);\n\n  if (_typeof(fluidBreakpoints) !== 'object') {\n    return styles;\n  }\n\n  var fluidBreakpointNames = Object.keys(fluidBreakpoints);\n\n  if (fluidBreakpointNames.length === 0) {\n    return styles;\n  }\n\n  styles.fontSize = fluidTypeSize(styles, 'sm', fluidBreakpoints);\n  fluidBreakpointNames.forEach(function (name) {\n    styles[breakpoint(name)] = _objectSpread2(_objectSpread2({}, fluidBreakpoints[name]), {}, {\n      fontSize: fluidTypeSize(styles, name, fluidBreakpoints)\n    });\n  });\n  return styles;\n}\n\nfunction fluidTypeSize(defaultStyles, fluidBreakpointName, fluidBreakpoints) {\n  var breakpoint = breakpoints[fluidBreakpointName];\n  var fluidBreakpoint = fluidBreakpointName === 'sm' ? defaultStyles : fluidBreakpoints[fluidBreakpointName];\n  var maxFontSize = defaultStyles.fontSize;\n  var minFontSize = defaultStyles.fontSize;\n\n  if (fluidBreakpoint.fontSize) {\n    minFontSize = fluidBreakpoint.fontSize;\n  }\n\n  var maxViewportWidth = breakpoint.width;\n  var minViewportWidth = breakpoint.width;\n  var nextBreakpointAvailable = next(fluidBreakpointName);\n  var nextFluidBreakpointName = null;\n\n  while (nextBreakpointAvailable) {\n    if (fluidBreakpoints[nextBreakpointAvailable]) {\n      nextFluidBreakpointName = nextBreakpointAvailable;\n      break;\n    }\n\n    nextBreakpointAvailable = next(nextBreakpointAvailable);\n  }\n\n  if (nextFluidBreakpointName) {\n    var nextFluidBreakpoint = breakpoints[nextFluidBreakpointName];\n    maxFontSize = fluidBreakpoints[nextFluidBreakpointName].fontSize;\n    maxViewportWidth = nextFluidBreakpoint.width;\n    return \"calc(\".concat(minFontSize, \" + \").concat(subtract(maxFontSize, minFontSize), \" * ((100vw - \").concat(minViewportWidth, \") / \").concat(subtract(maxViewportWidth, minViewportWidth), \"))\");\n  }\n\n  return minFontSize;\n}\n\nfunction subtract(a, b) {\n  return parseFloat(a) - parseFloat(b);\n}\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Unstable tokens\n\n\nvar caption01 = 'caption01';\nvar caption02 = 'caption02';\nvar label01 = 'label01';\nvar label02 = 'label02';\nvar helperText01 = 'helperText01';\nvar helperText02 = 'helperText02';\nvar bodyShort01 = 'bodyShort01';\nvar bodyLong01 = 'bodyLong01';\nvar bodyShort02 = 'bodyShort02';\nvar bodyLong02 = 'bodyLong02';\nvar code01 = 'code01';\nvar code02 = 'code02';\nvar heading01 = 'heading01';\nvar productiveHeading01 = 'productiveHeading01';\nvar heading02 = 'heading02';\nvar productiveHeading02 = 'productiveHeading02';\nvar productiveHeading03 = 'productiveHeading03';\nvar productiveHeading04 = 'productiveHeading04';\nvar productiveHeading05 = 'productiveHeading05';\nvar productiveHeading06 = 'productiveHeading06';\nvar productiveHeading07 = 'productiveHeading07';\nvar expressiveHeading01 = 'expressiveHeading01';\nvar expressiveHeading02 = 'expressiveHeading02';\nvar expressiveHeading03 = 'expressiveHeading03';\nvar expressiveHeading04 = 'expressiveHeading04';\nvar expressiveHeading05 = 'expressiveHeading05';\nvar expressiveHeading06 = 'expressiveHeading06';\nvar expressiveParagraph01 = 'expressiveParagraph01';\nvar quotation01 = 'quotation01';\nvar quotation02 = 'quotation02';\nvar display01 = 'display01';\nvar display02 = 'display02';\nvar display03 = 'display03';\nvar display04 = 'display04';\nvar unstable_tokens = [caption01, caption02, label01, label02, helperText01, helperText02, bodyShort01, bodyLong01, bodyShort02, bodyLong02, code01, code02, heading01, productiveHeading01, heading02, productiveHeading02, productiveHeading03, productiveHeading04, productiveHeading05, productiveHeading06, productiveHeading07, expressiveHeading01, expressiveHeading02, expressiveHeading03, expressiveHeading04, expressiveHeading05, expressiveHeading06, expressiveParagraph01, quotation01, quotation02, display01, display02, display03, display04];\nexport { bodyLong01$1 as bodyLong01, bodyLong02$1 as bodyLong02, bodyShort01$1 as bodyShort01, bodyShort02$1 as bodyShort02, caption01$1 as caption01, caption02$1 as caption02, code01$1 as code01, code02$1 as code02, display01$1 as display01, display02$1 as display02, display03$1 as display03, display04$1 as display04, expressiveHeading01$1 as expressiveHeading01, expressiveHeading02$1 as expressiveHeading02, expressiveHeading03$1 as expressiveHeading03, expressiveHeading04$1 as expressiveHeading04, expressiveHeading05$1 as expressiveHeading05, expressiveHeading06$1 as expressiveHeading06, expressiveParagraph01$1 as expressiveParagraph01, fluid, fontFamilies, fontFamily, fontWeight, fontWeights, getTypeSize, heading01$1 as heading01, heading02$1 as heading02, helperText01$1 as helperText01, helperText02$1 as helperText02, label01$1 as label01, label02$1 as label02, print, productiveHeading01$1 as productiveHeading01, productiveHeading02$1 as productiveHeading02, productiveHeading03$1 as productiveHeading03, productiveHeading04$1 as productiveHeading04, productiveHeading05$1 as productiveHeading05, productiveHeading06$1 as productiveHeading06, productiveHeading07$1 as productiveHeading07, quotation01$1 as quotation01, quotation02$1 as quotation02, reset, scale, styles, unstable_tokens };","map":null,"metadata":{},"sourceType":"module"}