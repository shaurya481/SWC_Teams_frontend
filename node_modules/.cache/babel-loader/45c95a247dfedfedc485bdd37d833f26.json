{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport debounce from 'lodash.debounce';\nimport classnames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { composeEventHandlers } from '../../tools/events';\nvar prefix = settings.prefix;\nexport default function Copy(_ref) {\n  var _classnames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      feedback = _ref.feedback,\n      feedbackTimeout = _ref.feedbackTimeout,\n      onAnimationEnd = _ref.onAnimationEnd,\n      onClick = _ref.onClick,\n      other = _objectWithoutProperties(_ref, [\"children\", \"className\", \"feedback\", \"feedbackTimeout\", \"onAnimationEnd\", \"onClick\"]);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      animation = _useState2[0],\n      setAnimation = _useState2[1];\n\n  var classNames = classnames(className, \"\".concat(prefix, \"--copy\"), (_classnames = {}, _defineProperty(_classnames, \"\".concat(prefix, \"--copy-btn--animating\"), animation), _defineProperty(_classnames, \"\".concat(prefix, \"--copy-btn--\").concat(animation), animation), _classnames)); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  var handleFadeOut = useCallback(debounce(function () {\n    setAnimation('fade-out');\n  }, feedbackTimeout), [feedbackTimeout]);\n  var handleClick = useCallback(function () {\n    setAnimation('fade-in');\n    handleFadeOut();\n  }, [handleFadeOut]);\n\n  var handleAnimationEnd = function handleAnimationEnd(event) {\n    if (event.animationName === 'hide-feedback') {\n      setAnimation('');\n    }\n  };\n\n  useEffect(function () {\n    return function () {\n      handleFadeOut.cancel();\n    };\n  }, [handleFadeOut]);\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\",\n    className: classNames,\n    onClick: composeEventHandlers([onClick, handleClick]),\n    onAnimationEnd: composeEventHandlers([onAnimationEnd, handleAnimationEnd])\n  }, other, {\n    \"aria-live\": \"polite\",\n    \"aria-label\": !children && (animation ? feedback : other['aria-label']) || null\n  }), children, animation ? feedback : other['aria-label'], /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"\".concat(prefix, \"--assistive-text \").concat(prefix, \"--copy-btn__feedback\")\n  }, feedback));\n}\nCopy.propTypes = {\n  /**\n   * Pass in content to be rendred in the underlying `<button>`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the underlying `<button>`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the string that is displayed when the button is clicked and the\n   * content is copied\n   */\n  feedback: PropTypes.string,\n\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n\n  /**\n   * Specify an optional `onAnimationEnd` handler that is called when the underlying\n   * animation ends\n   */\n  onAnimationEnd: PropTypes.func,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * `<button>` is clicked\n   */\n  onClick: PropTypes.func\n};\nCopy.defaultProps = {\n  feedback: 'Copied!',\n  feedbackTimeout: 2000,\n  onClick: function onClick() {}\n};","map":null,"metadata":{},"sourceType":"module"}