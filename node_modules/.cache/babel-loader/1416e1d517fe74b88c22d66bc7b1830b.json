{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { ChevronDown16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\n\nvar TimePickerSelect = /*#__PURE__*/function (_Component) {\n  _inherits(TimePickerSelect, _Component);\n\n  var _super = _createSuper(TimePickerSelect);\n\n  function TimePickerSelect() {\n    _classCallCheck(this, TimePickerSelect);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TimePickerSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          disabled = _this$props.disabled,\n          children = _this$props.children,\n          iconDescription = _this$props.iconDescription,\n          className = _this$props.className,\n          _this$props$hideLabel = _this$props.hideLabel,\n          hideLabel = _this$props$hideLabel === void 0 ? true : _this$props$hideLabel,\n          labelText = _this$props.labelText,\n          inline = _this$props.inline,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"disabled\", \"children\", \"iconDescription\", \"className\", \"hideLabel\", \"labelText\", \"inline\"]);\n\n      var selectClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--select\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--time-picker__select\"), true), _defineProperty(_classNames, className, className), _classNames));\n      var labelClasses = classNames(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n      var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: labelClasses\n      }, labelText) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: selectClasses\n      }, label, /*#__PURE__*/React.createElement(\"select\", _extends({}, other, {\n        id: id,\n        className: \"\".concat(prefix, \"--select-input\"),\n        disabled: disabled\n      }), children), /*#__PURE__*/React.createElement(ChevronDown16, {\n        className: \"\".concat(prefix, \"--select__arrow\"),\n        \"aria-label\": iconDescription\n      }, iconDescription && /*#__PURE__*/React.createElement(\"title\", null, iconDescription)));\n    }\n  }]);\n\n  return TimePickerSelect;\n}(Component);\n\n_defineProperty(TimePickerSelect, \"propTypes\", {\n  /**\n   * Provide the contents of your TimePickerSelect\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the node containing the label and the select box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<select>`\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  hideLabel: deprecate(PropTypes.bool, 'The `hideLabel` prop for `TimePickerSelect` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),\n\n  /**\n   * Provide a description for the twistie icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string.isRequired,\n\n  /**\n   * Specify a custom `id` for the `<select>`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Provide label text to be read by screen readers when interacting with the\n   * control\n   */\n  labelText: PropTypes.node.isRequired\n});\n\n_defineProperty(TimePickerSelect, \"defaultProps\", {\n  disabled: false,\n  inline: true,\n  iconDescription: 'open list of options'\n});\n\nexport { TimePickerSelect as default };","map":null,"metadata":{},"sourceType":"module"}