{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { OverflowMenuVertical16 } from '@carbon/icons-react';\nimport Menu from '../../Menu';\nvar prefix = settings.prefix;\n\nfunction OverflowMenu(_ref) {\n  var children = _ref.children,\n      _ref$renderIcon = _ref.renderIcon,\n      IconElement = _ref$renderIcon === void 0 ? OverflowMenuVertical16 : _ref$renderIcon,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"renderIcon\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState([[0, 0], [0, 0]]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      position = _useState4[0],\n      setPosition = _useState4[1];\n\n  var triggerRef = useRef(null);\n\n  function openMenu() {\n    if (triggerRef.current) {\n      var _triggerRef$current$g = triggerRef.current.getBoundingClientRect(),\n          left = _triggerRef$current$g.left,\n          top = _triggerRef$current$g.top,\n          right = _triggerRef$current$g.right,\n          bottom = _triggerRef$current$g.bottom;\n\n      setPosition([[left, right], [top, bottom]]);\n    }\n\n    setOpen(true);\n  }\n\n  function closeMenu() {\n    setOpen(false);\n  }\n\n  function handleClick() {\n    if (open) {\n      closeMenu();\n    } else {\n      openMenu();\n    }\n  }\n\n  var triggerClasses = classNames(\"\".concat(prefix, \"--overflow-menu\"), _defineProperty({}, \"\".concat(prefix, \"--overflow-menu--open\"), open));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", _extends({}, rest, {\n    type: \"button\",\n    \"aria-haspopup\": true,\n    \"aria-expanded\": open,\n    className: triggerClasses,\n    onClick: handleClick,\n    ref: triggerRef\n  }), /*#__PURE__*/React.createElement(IconElement, null)), /*#__PURE__*/React.createElement(Menu, {\n    open: open,\n    onClose: closeMenu,\n    x: position[0],\n    y: position[1]\n  }, children));\n}\n\nOverflowMenu.propTypes = {\n  /**\n   * Specify the children of the OverflowMenu\n   */\n  children: PropTypes.node,\n\n  /**\n   * Function called to override icon rendering.\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nexport default OverflowMenu;","map":null,"metadata":{},"sourceType":"module"}