{"ast":null,"code":"/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar unstable_tokens = [// Spacing\n'spacing01', 'spacing02', 'spacing03', 'spacing04', 'spacing05', 'spacing06', 'spacing07', 'spacing08', 'spacing09', 'spacing10', 'spacing11', 'spacing12', 'spacing13', // Fluid spacing\n'fluidSpacing01', 'fluidSpacing02', 'fluidSpacing03', 'fluidSpacing04', // Layout\n// Deprecated -- Remove in v11\n'layout01', 'layout02', 'layout03', 'layout04', 'layout05', 'layout06', 'layout07', // Containers\n'container01', 'container02', 'container03', 'container04', 'container05', 'sizeXSmall', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'sizeXLarge', 'size2XLarge', // Icon sizes\n'iconSize01', 'iconSize02'];\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Default, Use with em() and rem() functions\n\nvar baseFontSize = 16;\n/**\n * Convert a given px unit to a rem unit\n * @param {number} px\n * @returns {string}\n */\n\nfunction rem(px) {\n  return \"\".concat(px / baseFontSize, \"rem\");\n}\n/**\n * Convert a given px unit to a em unit\n * @param {number} px\n * @returns {string}\n */\n\n\nfunction em(px) {\n  return \"\".concat(px / baseFontSize, \"em\");\n}\n/**\n * Convert a given px unit to its string representation\n * @param {number} value - number of pixels\n * @returns {string}\n */\n\n\nfunction px(value) {\n  return \"\".concat(value, \"px\");\n} // Breakpoint\n// Initial map of our breakpoints and their values\n\n\nvar breakpoints = {\n  sm: {\n    width: rem(320),\n    columns: 4,\n    margin: '0'\n  },\n  md: {\n    width: rem(672),\n    columns: 8,\n    margin: rem(16)\n  },\n  lg: {\n    width: rem(1056),\n    columns: 16,\n    margin: rem(16)\n  },\n  xlg: {\n    width: rem(1312),\n    columns: 16,\n    margin: rem(16)\n  },\n  max: {\n    width: rem(1584),\n    columns: 16,\n    margin: rem(24)\n  }\n};\n\nfunction breakpointUp(name) {\n  return \"@media (min-width: \".concat(breakpoints[name].width, \")\");\n}\n\nfunction breakpointDown(name) {\n  return \"@media (max-width: \".concat(breakpoints[name].width, \")\");\n}\n\nfunction breakpoint() {\n  return breakpointUp.apply(void 0, arguments);\n} // Mini-unit\n\n\nvar miniUnit = 8;\n\nfunction miniUnits(count) {\n  return rem(miniUnit * count);\n} // Spacing\n\n\nvar spacing01 = miniUnits(0.25);\nvar spacing02 = miniUnits(0.5);\nvar spacing03 = miniUnits(1);\nvar spacing04 = miniUnits(1.5);\nvar spacing05 = miniUnits(2);\nvar spacing06 = miniUnits(3);\nvar spacing07 = miniUnits(4);\nvar spacing08 = miniUnits(5);\nvar spacing09 = miniUnits(6);\nvar spacing10 = miniUnits(8);\nvar spacing11 = miniUnits(10);\nvar spacing12 = miniUnits(12);\nvar spacing13 = miniUnits(20);\nvar spacing = [spacing01, spacing02, spacing03, spacing04, spacing05, spacing06, spacing07, spacing08, spacing09, spacing10, spacing11, spacing12, spacing13]; // Fluid spacing\n\nvar fluidSpacing01 = 0;\nvar fluidSpacing02 = '2vw';\nvar fluidSpacing03 = '5vw';\nvar fluidSpacing04 = '10vw';\nvar fluidSpacing = [fluidSpacing01, fluidSpacing02, fluidSpacing03, fluidSpacing04]; // Layout\n// Deprecated -- Remove in v11\n\nvar layout01 = miniUnits(2);\nvar layout02 = miniUnits(3);\nvar layout03 = miniUnits(4);\nvar layout04 = miniUnits(6);\nvar layout05 = miniUnits(8);\nvar layout06 = miniUnits(12);\nvar layout07 = miniUnits(20);\nvar layout = [layout01, layout02, layout03, layout04, layout05, layout06, layout07]; // Container\n\nvar container01 = miniUnits(3);\nvar container02 = miniUnits(4);\nvar container03 = miniUnits(5);\nvar container04 = miniUnits(6);\nvar container05 = miniUnits(8);\nvar container = [container01, container02, container03, container04, container05];\nvar sizeXSmall = rem(24);\nvar sizeSmall = rem(32);\nvar sizeMedium = rem(40);\nvar sizeLarge = rem(48);\nvar sizeXLarge = rem(64);\nvar size2XLarge = rem(80);\nvar sizes = {\n  XSmall: sizeXSmall,\n  Small: sizeSmall,\n  Medium: sizeMedium,\n  Large: sizeLarge,\n  XLarge: sizeXLarge,\n  '2XLarge': size2XLarge\n}; // Icon\n\nvar iconSize01 = '1rem';\nvar iconSize02 = '1.25rem';\nvar iconSize = [iconSize01, iconSize02];\nexport { baseFontSize, breakpoint, breakpointDown, breakpointUp, breakpoints, container, container01, container02, container03, container04, container05, em, fluidSpacing, fluidSpacing01, fluidSpacing02, fluidSpacing03, fluidSpacing04, iconSize, iconSize01, iconSize02, layout, layout01, layout02, layout03, layout04, layout05, layout06, layout07, miniUnit, miniUnits, px, rem, size2XLarge, sizeLarge, sizeMedium, sizeSmall, sizeXLarge, sizeXSmall, sizes, spacing, spacing01, spacing02, spacing03, spacing04, spacing05, spacing06, spacing07, spacing08, spacing09, spacing10, spacing11, spacing12, spacing13, unstable_tokens };","map":null,"metadata":{},"sourceType":"module"}