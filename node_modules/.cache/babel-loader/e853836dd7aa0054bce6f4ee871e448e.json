{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close16 } from '@carbon/icons-react';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\nvar TYPES = {\n  red: 'Red',\n  magenta: 'Magenta',\n  purple: 'Purple',\n  blue: 'Blue',\n  cyan: 'Cyan',\n  teal: 'Teal',\n  green: 'Green',\n  gray: 'Gray',\n  'cool-gray': 'Cool-Gray',\n  'warm-gray': 'Warm-Gray',\n  'high-contrast': 'High-Contrast'\n};\n\nvar Tag = function Tag(_ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      id = _ref.id,\n      type = _ref.type,\n      filter = _ref.filter,\n      CustomIconElement = _ref.renderIcon,\n      title = _ref.title,\n      disabled = _ref.disabled,\n      onClose = _ref.onClose,\n      size = _ref.size,\n      other = _objectWithoutProperties(_ref, [\"children\", \"className\", \"id\", \"type\", \"filter\", \"renderIcon\", \"title\", \"disabled\", \"onClose\", \"size\"]);\n\n  var tagId = id || \"tag-\".concat(getInstanceId());\n  var tagClasses = classNames(\"\".concat(prefix, \"--tag\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--tag--disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--tag--filter\"), filter), _defineProperty(_classNames, \"\".concat(prefix, \"--tag--\").concat(size), size), _defineProperty(_classNames, \"\".concat(prefix, \"--tag--\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefix, \"--tag--interactive\"), other.onClick && !filter), _classNames));\n\n  var handleClose = function handleClose(event) {\n    if (onClose) {\n      event.stopPropagation();\n      onClose(event);\n    }\n  };\n\n  if (filter) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: tagClasses,\n      \"aria-label\": title !== undefined ? \"\".concat(title, \" \").concat(children) : \"Clear filter \".concat(children),\n      id: tagId\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tag__label\"),\n      title: typeof children === 'string' ? children : null\n    }, children !== null && children !== undefined ? children : TYPES[type]), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"\".concat(prefix, \"--tag__close-icon\"),\n      onClick: handleClose,\n      disabled: disabled,\n      \"aria-labelledby\": tagId,\n      title: title\n    }, /*#__PURE__*/React.createElement(Close16, null)));\n  }\n\n  var ComponentTag = other.onClick ? 'button' : 'div';\n  return /*#__PURE__*/React.createElement(ComponentTag, _extends({\n    disabled: ComponentTag === 'button' ? disabled : null,\n    className: tagClasses,\n    id: tagId\n  }, other), CustomIconElement ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tag__custom-icon\")\n  }, /*#__PURE__*/React.createElement(CustomIconElement, null)) : '', /*#__PURE__*/React.createElement(\"span\", {\n    title: typeof children === 'string' ? children : null\n  }, children !== null && children !== undefined ? children : TYPES[type]));\n};\n\nTag.propTypes = {\n  /**\n   * Provide content to be rendered inside of a <Tag>\n   */\n  children: PropTypes.node,\n\n  /**\n   * Provide a custom className that is applied to the containing <span>\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify if the <Tag> is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Determine if <Tag> is a filter/chip\n   */\n  filter: PropTypes.bool,\n\n  /**\n   * Specify the id for the tag.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Click handler for filter tag close button.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Optional prop to render a custom icon.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify the size of the Tag. Currently supports either `sm` or\n   * 'md' (default) sizes.\n   */\n  size: PropTypes.oneOf(['sm', 'md']),\n\n  /**\n   * Text to show on clear filters\n   */\n  title: PropTypes.string,\n\n  /**\n   * Specify the type of the <Tag>\n   */\n  type: PropTypes.oneOf(Object.keys(TYPES))\n};\nexport var types = Object.keys(TYPES);\nexport default Tag;","map":null,"metadata":{},"sourceType":"module"}