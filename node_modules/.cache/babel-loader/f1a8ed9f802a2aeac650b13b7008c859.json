{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Close16, CloseFilled16 } from '@carbon/icons-react';\nexport var ModifiedTabLabelWithClose = function ModifiedTabLabelWithClose(_ref) {\n  var unsavedContent = _ref.unsavedContent,\n      label = _ref.label,\n      onClose = _ref.onClose;\n\n  var handleClose = function handleClose() {\n    if (onClose) {\n      onClose();\n    }\n  }; // const handleMousedown = (ev) => {\n  //   console.log('mouse down');\n  //   console.dir(ev);\n  //   ev.stopPropagation();\n  //   ev.cancelBubble = true;\n  //   ev.preventDefault();\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"modified-tabs__tab\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"modified-tabs__tab-label\"\n  }, label), /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Close button\",\n    onClick: handleClose // onMouseDown={handleMousedown}\n    ,\n    className: \"modified-tabs__tab-close\",\n    type: \"button\"\n  }, unsavedContent ? /*#__PURE__*/React.createElement(CloseFilled16, null) : /*#__PURE__*/React.createElement(Close16, null)));\n};\nModifiedTabLabelWithClose.propTypes = {\n  /**\n   * Label content of the tab\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Optional onClose handler\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * unsavedContent indicates tab contents have not been saved\n   */\n  unsavedContent: PropTypes.bool\n};\nModifiedTabLabelWithClose.defaultProps = {\n  unsavedContent: false,\n  label: '',\n  onClose: undefined\n};","map":null,"metadata":{},"sourceType":"module"}