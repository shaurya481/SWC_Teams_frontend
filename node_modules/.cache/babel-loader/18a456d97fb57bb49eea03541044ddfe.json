{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\"; //\n// Copyright IBM Corp. 2021, 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Link, Tag, Tooltip } from 'carbon-components-react';\nimport { pkg } from '../../settings';\nvar componentName = 'TagSetOverflow';\nvar blockClass = \"\".concat(pkg.prefix, \"--tag-set-overflow\");\nexport var TagSetOverflow = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      overflowTags = _ref.overflowTags,\n      onShowAllClick = _ref.onShowAllClick,\n      overflowAlign = _ref.overflowAlign,\n      overflowDirection = _ref.overflowDirection,\n      showAllTagsLabel = _ref.showAllTagsLabel,\n      allTagsModalSearchThreshold = _ref.allTagsModalSearchThreshold;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      tipOpen = _useState2[0],\n      setTipOpen = _useState2[1];\n\n  var overflowTagContent = useRef(null);\n\n  var handleChange = function handleChange(ev, _ref2) {\n    var open = _ref2.open;\n    setTipOpen(open);\n  };\n\n  var handleShowAllTagsClick = function handleShowAllTagsClick(ev) {\n    ev.stopPropagation();\n    ev.preventDefault();\n    setTipOpen(false);\n    onShowAllClick();\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": overflowTags.length === 0,\n    className: cx(\"\".concat(blockClass), _defineProperty({}, \"\".concat(blockClass, \"--hidden\"), overflowTags.length === 0)),\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    align: overflowAlign,\n    className: cx(className, \"\".concat(blockClass, \"__tooltip\")),\n    direction: overflowDirection,\n    onChange: handleChange,\n    open: tipOpen,\n    triggerText: /*#__PURE__*/React.createElement(Tag, null, \"+\", overflowTags.length),\n    showIcon: false\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: overflowTagContent,\n    className: \"\".concat(blockClass, \"__content\")\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"\".concat(blockClass, \"__tag-list\")\n  }, overflowTags.filter(function (_, index) {\n    return overflowTags.length > allTagsModalSearchThreshold ? index < allTagsModalSearchThreshold : index <= allTagsModalSearchThreshold;\n  }).map(function (tag, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"\".concat(blockClass, \"__tag-item\"),\n      key: index\n    }, /*#__PURE__*/React.cloneElement(tag, {\n      filter: false\n    }));\n  })), overflowTags.length > allTagsModalSearchThreshold && /*#__PURE__*/React.createElement(Link, {\n    className: \"\".concat(blockClass, \"__show-all-tags-link\"),\n    href: \"\",\n    onClick: handleShowAllTagsClick,\n    role: \"button\"\n  }, showAllTagsLabel))));\n});\nTagSetOverflow.displayName = componentName;\nTagSetOverflow.propTypes = {\n  /**\n   * count of overflowTags over which a modal is offered\n   */\n  allTagsModalSearchThreshold: PropTypes.number,\n\n  /**\n   * className\n   */\n  className: PropTypes.string,\n\n  /**\n   * function to execute on clicking show all\n   */\n  onShowAllClick: PropTypes.func.isRequired,\n\n  /**\n   * overflowAlign from the standard tooltip\n   */\n  overflowAlign: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * overflowDirection from the standard tooltip\n   */\n  overflowDirection: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * tags shown in overflow\n   */\n  overflowTags: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /**\n   * label for the overflow show all tags link\n   */\n  showAllTagsLabel: PropTypes.string\n};\nTagSetOverflow.defaultProps = {\n  allTagsModalSearchThreshold: 10,\n  overflowAlign: 'center',\n  overflowDirection: 'bottom'\n};","map":null,"metadata":{},"sourceType":"module"}