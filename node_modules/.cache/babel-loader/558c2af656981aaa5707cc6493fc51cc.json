{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.OverflowMenu = exports.getMenuOffset = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _ClickListener = _interopRequireDefault(require(\"../../internal/ClickListener\"));\n\nvar _FloatingMenu = _interopRequireWildcard(require(\"../../internal/FloatingMenu\"));\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _keyboard = require(\"../../internal/keyboard\");\n\nvar _mergeRefs = _interopRequireDefault(require(\"../../tools/mergeRefs\"));\n\nvar _triggerButtonPositio, _triggerButtonPositio2;\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar prefix = _carbonComponents.settings.prefix;\n\nvar on = function on(element) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  element.addEventListener.apply(element, args);\n  return {\n    release: function release() {\n      element.removeEventListener.apply(element, args);\n      return null;\n    }\n  };\n};\n/**\n * The CSS property names of the arrow keyed by the floating menu direction.\n * @type {object<string, string>}\n */\n\n\nvar triggerButtonPositionProps = (_triggerButtonPositio = {}, _defineProperty(_triggerButtonPositio, _FloatingMenu.DIRECTION_TOP, 'bottom'), _defineProperty(_triggerButtonPositio, _FloatingMenu.DIRECTION_BOTTOM, 'top'), _triggerButtonPositio);\n/**\n * Determines how the position of arrow should affect the floating menu position.\n * @type {object<string, number>}\n */\n\nvar triggerButtonPositionFactors = (_triggerButtonPositio2 = {}, _defineProperty(_triggerButtonPositio2, _FloatingMenu.DIRECTION_TOP, -2), _defineProperty(_triggerButtonPositio2, _FloatingMenu.DIRECTION_BOTTOM, -1), _triggerButtonPositio2);\n/**\n * @param {Element} menuBody The menu body with the menu arrow.\n * @param {string} direction The floating menu direction.\n * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.\n * @private\n */\n\nvar getMenuOffset = function getMenuOffset(menuBody, direction, trigger, flip) {\n  var triggerButtonPositionProp = triggerButtonPositionProps[direction];\n  var triggerButtonPositionFactor = triggerButtonPositionFactors[direction];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    !(triggerButtonPositionProp && triggerButtonPositionFactor) ? process.env.NODE_ENV !== \"production\" ? (0, _invariant.default)(false, '[OverflowMenu] wrong floating menu direction: `%s`', direction) : invariant(false) : void 0;\n  }\n\n  var menuWidth = menuBody.offsetWidth,\n      menuHeight = menuBody.offsetHeight;\n\n  switch (triggerButtonPositionProp) {\n    case 'top':\n    case 'bottom':\n      {\n        // TODO: Ensure `trigger` is there for `<OverflowMenu open>`\n        var triggerWidth = !trigger ? 0 : trigger.offsetWidth;\n        return {\n          left: (!flip ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),\n          top: 0\n        };\n      }\n\n    case 'left':\n    case 'right':\n      {\n        // TODO: Ensure `trigger` is there for `<OverflowMenu open>`\n        var triggerHeight = !trigger ? 0 : trigger.offsetHeight;\n        return {\n          left: 0,\n          top: (!flip ? 1 : -1) * (menuHeight / 2 - triggerHeight / 2)\n        };\n      }\n\n    default:\n      break;\n  }\n};\n\nexports.getMenuOffset = getMenuOffset;\n\nvar OverflowMenu = /*#__PURE__*/function (_Component) {\n  _inherits(OverflowMenu, _Component);\n\n  var _super = _createSuper(OverflowMenu);\n\n  function OverflowMenu() {\n    var _this;\n\n    _classCallCheck(this, OverflowMenu);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_hFocusIn\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_hBlurTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_triggerRef\", /*#__PURE__*/_react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (evt) {\n      if (!_this._menuBody || !_this._menuBody.contains(evt.target)) {\n        _this.setState({\n          open: !_this.state.open\n        });\n\n        _this.props.onClick(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (evt) {\n      if ((0, _keyboard.matches)(evt, [_keyboard.keys.ArrowDown])) {\n        _this.setState({\n          open: !_this.state.open\n        });\n\n        _this.props.onClick(evt);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPress\", function (evt) {\n      if (_this.state.open && (0, _keyboard.matches)(evt, [_keyboard.keys.ArrowUp, _keyboard.keys.ArrowRight, _keyboard.keys.ArrowDown, _keyboard.keys.ArrowLeft])) {\n        evt.preventDefault();\n      } // Close the overflow menu on escape\n\n\n      if ((0, _keyboard.matches)(evt, [_keyboard.keys.Escape])) {\n        var wasOpen = _this.state.open;\n\n        _this.closeMenu(function () {\n          if (wasOpen) {\n            _this.focusMenuEl();\n          }\n        }); // Stop the esc keypress from bubbling out and closing something it shouldn't\n\n\n        evt.stopPropagation();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (evt) {\n      if (_this.state.open && (!_this._menuBody || !_this._menuBody.contains(evt.target))) {\n        _this.closeMenu();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeMenu\", function (onCloseMenu) {\n      _this.setState({\n        open: false\n      }, function () {\n        // Optional callback to be executed after the state as been set to close\n        if (onCloseMenu) {\n          onCloseMenu();\n        }\n\n        _this.props.onClose();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusMenuEl\", function () {\n      var triggerEl = _this._triggerRef.current;\n\n      if (triggerEl) {\n        triggerEl.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOverflowMenuItemFocus\", function (_ref) {\n      var _overflowMenuItem$cur;\n\n      var currentIndex = _ref.currentIndex,\n          direction = _ref.direction;\n\n      var enabledIndices = _react.default.Children.toArray(_this.props.children).reduce(function (acc, curr, i) {\n        if (!curr.props.disabled) {\n          acc.push(i);\n        }\n\n        return acc;\n      }, []);\n\n      var nextValidIndex = function () {\n        var nextIndex = enabledIndices.indexOf(currentIndex) + direction;\n\n        switch (enabledIndices.indexOf(currentIndex) + direction) {\n          case -1:\n            return enabledIndices.length - 1;\n\n          case enabledIndices.length:\n            return 0;\n\n          default:\n            return nextIndex;\n        }\n      }();\n\n      var overflowMenuItem = _this[\"overflowMenuItem\".concat(enabledIndices[nextValidIndex])].overflowMenuItem;\n\n      overflowMenuItem === null || overflowMenuItem === void 0 ? void 0 : (_overflowMenuItem$cur = overflowMenuItem.current) === null || _overflowMenuItem$cur === void 0 ? void 0 : _overflowMenuItem$cur.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bindMenuBody\", function (menuBody) {\n      if (!menuBody) {\n        _this._menuBody = menuBody;\n      }\n\n      if (!menuBody && _this._hFocusIn) {\n        _this._hFocusIn = _this._hFocusIn.release();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePlace\", function (menuBody) {\n      if (menuBody) {\n        _this._menuBody = menuBody;\n        var hasFocusin = ('onfocusin' in window);\n        var focusinEventName = hasFocusin ? 'focusin' : 'focus';\n        _this._hFocusIn = on(menuBody.ownerDocument, focusinEventName, function (event) {\n          var target = _ClickListener.default.getEventTarget(event);\n\n          var triggerEl = _this._triggerRef.current;\n\n          if (typeof target.matches === 'function') {\n            if (!menuBody.contains(target) && triggerEl && !target.matches(\".\".concat(prefix, \"--overflow-menu,.\").concat(prefix, \"--overflow-menu-options\"))) {\n              _this.closeMenu();\n            }\n          }\n        }, !hasFocusin);\n\n        _this.props.onOpen();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getTarget\", function () {\n      var triggerEl = _this._triggerRef.current;\n      return triggerEl && triggerEl.closest('[data-floating-menu-container]') || document.body;\n    });\n\n    return _this;\n  }\n\n  _createClass(OverflowMenu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevState) {\n      var onClose = this.props.onClose;\n\n      if (!this.state.open && prevState.open) {\n        onClose();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this._hBlurTimeout === 'number') {\n        clearTimeout(this._hBlurTimeout);\n        this._hBlurTimeout = undefined;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          ariaLabel = _this$props.ariaLabel,\n          children = _this$props.children,\n          iconDescription = _this$props.iconDescription,\n          direction = _this$props.direction,\n          flipped = _this$props.flipped,\n          menuOffset = _this$props.menuOffset,\n          menuOffsetFlip = _this$props.menuOffsetFlip,\n          iconClass = _this$props.iconClass,\n          onClick = _this$props.onClick,\n          onOpen = _this$props.onOpen,\n          _this$props$selectorP = _this$props.selectorPrimaryFocus,\n          selectorPrimaryFocus = _this$props$selectorP === void 0 ? '[data-floating-menu-primary-focus]' : _this$props$selectorP,\n          IconElement = _this$props.renderIcon,\n          ref = _this$props.innerRef,\n          menuOptionsClass = _this$props.menuOptionsClass,\n          light = _this$props.light,\n          size = _this$props.size,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"ariaLabel\", \"children\", \"iconDescription\", \"direction\", \"flipped\", \"menuOffset\", \"menuOffsetFlip\", \"iconClass\", \"onClick\", \"onOpen\", \"selectorPrimaryFocus\", \"renderIcon\", \"innerRef\", \"menuOptionsClass\", \"light\", \"size\"]);\n\n      var open = this.state.open;\n      var overflowMenuClasses = (0, _classnames.default)(this.props.className, \"\".concat(prefix, \"--overflow-menu\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--overflow-menu--open\"), open), _defineProperty(_classNames, \"\".concat(prefix, \"--overflow-menu--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--overflow-menu--\").concat(size), size), _classNames));\n      var overflowMenuOptionsClasses = (0, _classnames.default)(menuOptionsClass, \"\".concat(prefix, \"--overflow-menu-options\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--overflow-menu--flip\"), this.props.flipped), _defineProperty(_classNames2, \"\".concat(prefix, \"--overflow-menu-options--open\"), open), _defineProperty(_classNames2, \"\".concat(prefix, \"--overflow-menu-options--light\"), light), _defineProperty(_classNames2, \"\".concat(prefix, \"--overflow-menu-options--\").concat(size), size), _classNames2));\n      var overflowMenuIconClasses = (0, _classnames.default)(\"\".concat(prefix, \"--overflow-menu__icon\"), iconClass);\n\n      var childrenWithProps = _react.default.Children.toArray(children).map(function (child, index) {\n        var _child$props;\n\n        return /*#__PURE__*/_react.default.cloneElement(child, {\n          closeMenu: (child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.closeMenu) || _this2.closeMenu,\n          handleOverflowMenuItemFocus: _this2.handleOverflowMenuItemFocus,\n          ref: function ref(e) {\n            _this2[\"overflowMenuItem\".concat(index)] = e;\n          },\n          index: index\n        });\n      });\n\n      var menuBody = /*#__PURE__*/_react.default.createElement(\"ul\", {\n        className: overflowMenuOptionsClasses,\n        tabIndex: \"-1\",\n        role: \"menu\",\n        \"aria-label\": ariaLabel\n      }, childrenWithProps);\n\n      var wrappedMenuBody = /*#__PURE__*/_react.default.createElement(_FloatingMenu.default, {\n        focusTrap: true,\n        triggerRef: this._triggerRef,\n        menuDirection: direction,\n        menuOffset: flipped ? menuOffsetFlip : menuOffset,\n        menuRef: this._bindMenuBody,\n        flipped: this.props.flipped,\n        target: this._getTarget,\n        onPlace: this._handlePlace,\n        selectorPrimaryFocus: this.props.selectorPrimaryFocus\n      }, /*#__PURE__*/_react.default.cloneElement(menuBody, {\n        'data-floating-menu-direction': direction\n      }));\n\n      var iconProps = {\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        className: overflowMenuIconClasses,\n        'aria-label': iconDescription\n      };\n      return /*#__PURE__*/_react.default.createElement(_ClickListener.default, {\n        onClickOutside: this.handleClickOutside\n      }, /*#__PURE__*/_react.default.createElement(\"button\", _extends({}, other, {\n        type: \"button\",\n        \"aria-haspopup\": true,\n        \"aria-expanded\": this.state.open,\n        className: overflowMenuClasses,\n        onKeyDown: this.handleKeyPress,\n        onClick: this.handleClick,\n        \"aria-label\": ariaLabel,\n        id: id,\n        ref: (0, _mergeRefs.default)(this._triggerRef, ref)\n      }), /*#__PURE__*/_react.default.createElement(IconElement, iconProps, iconDescription && /*#__PURE__*/_react.default.createElement(\"title\", null, iconDescription)), open && wrappedMenuBody));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2, state) {\n      var open = _ref2.open;\n      var prevOpen = state.prevOpen;\n      return prevOpen === open ? null : {\n        open: open,\n        prevOpen: open\n      };\n    }\n  }]);\n\n  return OverflowMenu;\n}(_react.Component);\n\nexports.OverflowMenu = OverflowMenu;\n\n_defineProperty(OverflowMenu, \"propTypes\", {\n  /**\n   * The ARIA label.\n   */\n  ariaLabel: _propTypes.default.string,\n\n  /**\n   * The child nodes.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The menu direction.\n   */\n  direction: _propTypes.default.oneOf([_FloatingMenu.DIRECTION_TOP, _FloatingMenu.DIRECTION_BOTTOM]),\n\n  /**\n   * `true` if the menu alignment should be flipped.\n   */\n  flipped: _propTypes.default.bool,\n\n  /**\n   * The CSS class for the icon.\n   */\n  iconClass: _propTypes.default.string,\n\n  /**\n   * The icon description.\n   */\n  iconDescription: _propTypes.default.string.isRequired,\n\n  /**\n   * The element ID.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make OverflowMenu background color same as container background color.\n   */\n  light: _propTypes.default.bool,\n\n  /**\n   * The adjustment in position applied to the floating menu.\n   */\n  menuOffset: _propTypes.default.oneOfType([_propTypes.default.shape({\n    top: _propTypes.default.number,\n    left: _propTypes.default.number\n  }), _propTypes.default.func]),\n\n  /**\n   * The adjustment in position applied to the floating menu.\n   */\n  menuOffsetFlip: _propTypes.default.oneOfType([_propTypes.default.shape({\n    top: _propTypes.default.number,\n    left: _propTypes.default.number\n  }), _propTypes.default.func]),\n\n  /**\n   * The class to apply to the menu options\n   */\n  menuOptionsClass: _propTypes.default.string,\n\n  /**\n   * The event handler for the `click` event.\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * Function called when menu is closed\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * The event handler for the `focus` event.\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * The event handler for the `keydown` event.\n   */\n  onKeyDown: _propTypes.default.func,\n\n  /**\n   * Function called when menu is opened\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * `true` if the menu should be open.\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Function called to override icon rendering.\n   */\n  renderIcon: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * Specify a CSS selector that matches the DOM element that should\n   * be focused when the OverflowMenu opens\n   */\n  selectorPrimaryFocus: _propTypes.default.string,\n\n  /**\n   * Specify the size of the OverflowMenu. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   * TODO V11: remove `xl` (replaced with lg)\n   */\n  size: _propTypes.default.oneOf(['sm', 'md', 'lg', 'xl'])\n});\n\n_defineProperty(OverflowMenu, \"defaultProps\", {\n  ariaLabel: 'open and close list of options',\n  iconDescription: 'open and close list of options',\n  open: false,\n  direction: _FloatingMenu.DIRECTION_BOTTOM,\n  flipped: false,\n  renderIcon: _iconsReact.OverflowMenuVertical16,\n  onClick: function onClick() {},\n  onKeyDown: function onKeyDown() {},\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  menuOffset: getMenuOffset,\n  menuOffsetFlip: getMenuOffset,\n  light: false,\n  selectorPrimaryFocus: '[data-overflow-menu-primary-focus]'\n});\n\nvar _default = function () {\n  var forwardRef = function forwardRef(props, ref) {\n    return /*#__PURE__*/_react.default.createElement(OverflowMenu, _extends({}, props, {\n      innerRef: ref\n    }));\n  };\n\n  forwardRef.displayName = 'OverflowMenu';\n  return /*#__PURE__*/_react.default.forwardRef(forwardRef);\n}();\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}