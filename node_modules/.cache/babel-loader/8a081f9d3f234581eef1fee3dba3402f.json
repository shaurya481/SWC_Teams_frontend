{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { CaretRight16 } from '@carbon/icons-react';\nimport { keys, match } from '../../internal/keyboard';\nimport { getFirstSubNode, focusNode, getParentMenu, clickedElementHasSubnodes } from './_utils';\nimport Menu from './Menu';\nvar prefix = settings.prefix;\nvar hoverIntentDelay = 150; // in ms\n\nfunction MenuOptionContent(_ref) {\n  var label = _ref.label,\n      info = _ref.info,\n      disabled = _ref.disabled,\n      Icon = _ref.icon,\n      indented = _ref.indented;\n  var classes = classnames(\"\".concat(prefix, \"--menu-option__content\"), _defineProperty({}, \"\".concat(prefix, \"--menu-option__content--disabled\"), disabled));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes\n  }, indented && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--menu-option__icon\")\n  }, Icon && /*#__PURE__*/React.createElement(Icon, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--menu-option__label\"),\n    title: label\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--menu-option__info\")\n  }, info));\n}\n\nfunction MenuOption(_ref2) {\n  var _classnames2;\n\n  var children = _ref2.children,\n      disabled = _ref2.disabled,\n      indented = _ref2.indented,\n      _ref2$kind = _ref2.kind,\n      kind = _ref2$kind === void 0 ? 'default' : _ref2$kind,\n      label = _ref2.label,\n      level = _ref2.level,\n      _ref2$onClick = _ref2.onClick,\n      onClick = _ref2$onClick === void 0 ? function () {} : _ref2$onClick,\n      renderIcon = _ref2.renderIcon,\n      shortcut = _ref2.shortcut,\n      rest = _objectWithoutProperties(_ref2, [\"children\", \"disabled\", \"indented\", \"kind\", \"label\", \"level\", \"onClick\", \"renderIcon\", \"shortcut\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submenuOpen = _useState2[0],\n      setSubmenuOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submenuOpenedByKeyboard = _useState4[0],\n      setSubmenuOpenedByKeyboard = _useState4[1];\n\n  var rootRef = useRef(null);\n  var hoverIntentTimeout = useRef(null);\n  var subOptions = React.Children.map(children, function (node) {\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node);\n    }\n  });\n\n  function openSubmenu() {\n    var openedByKeyboard = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    setSubmenuOpenedByKeyboard(openedByKeyboard);\n    setSubmenuOpen(true);\n  }\n\n  function handleKeyDown(event) {\n    if (clickedElementHasSubnodes(event) && (match(event, keys.ArrowRight) || match(event, keys.Enter) || match(event, keys.Space))) {\n      openSubmenu(true);\n    } else if ((match(event, keys.Enter) || match(event, keys.Space)) && onClick) {\n      onClick(event);\n    }\n  }\n\n  function handleMouseEnter() {\n    hoverIntentTimeout.current = setTimeout(openSubmenu, hoverIntentDelay);\n  }\n\n  function handleMouseLeave() {\n    clearTimeout(hoverIntentTimeout === null || hoverIntentTimeout === void 0 ? void 0 : hoverIntentTimeout.current);\n    setSubmenuOpen(false);\n  }\n\n  function getSubmenuPosition() {\n    var pos = [0, 0];\n\n    if (subOptions) {\n      var parentMenu = getParentMenu(rootRef === null || rootRef === void 0 ? void 0 : rootRef.current);\n\n      if (parentMenu) {\n        var _parentMenu$getBoundi = parentMenu.getBoundingClientRect(),\n            x = _parentMenu$getBoundi.x,\n            width = _parentMenu$getBoundi.width;\n\n        var _rootRef$current$getB = rootRef.current.getBoundingClientRect(),\n            y = _rootRef$current$getB.y;\n\n        pos[0] = x + width;\n        pos[1] = y;\n      }\n    }\n\n    return pos;\n  }\n\n  useEffect(function () {\n    if (subOptions && submenuOpenedByKeyboard) {\n      var firstSubnode = getFirstSubNode(rootRef === null || rootRef === void 0 ? void 0 : rootRef.current);\n      focusNode(firstSubnode);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [submenuOpen]);\n  var classes = classnames(\"\".concat(prefix, \"--menu-option\"), (_classnames2 = {}, _defineProperty(_classnames2, \"\".concat(prefix, \"--menu-option--disabled\"), disabled), _defineProperty(_classnames2, \"\".concat(prefix, \"--menu-option--active\"), subOptions && submenuOpen), _defineProperty(_classnames2, \"\".concat(prefix, \"--menu-option--danger\"), !subOptions && kind === 'danger'), _classnames2));\n  var allowedRoles = ['menuitemradio', 'menuitemcheckbox'];\n  var role = rest.role && allowedRoles.includes(rest.role) ? rest.role : 'menuitem';\n  var submenuPosition = getSubmenuPosition();\n  return (\n    /*#__PURE__*/\n    // role is either menuitemradio, menuitemcheckbox, or menuitem which are all interactive\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    React.createElement(\"li\", _extends({}, rest, {\n      ref: rootRef,\n      className: classes,\n      role: role,\n      tabIndex: -1,\n      \"aria-disabled\": !subOptions && disabled,\n      \"aria-haspopup\": subOptions ? true : null,\n      \"aria-expanded\": subOptions ? submenuOpen : null,\n      onKeyDown: handleKeyDown,\n      onMouseEnter: subOptions ? handleMouseEnter : null,\n      onMouseLeave: subOptions ? handleMouseLeave : null,\n      onClick: onClick\n    }), subOptions ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuOptionContent, {\n      label: label,\n      icon: renderIcon,\n      info: /*#__PURE__*/React.createElement(CaretRight16, null),\n      indented: indented\n    }), /*#__PURE__*/React.createElement(Menu, {\n      level: level + 1,\n      open: submenuOpen,\n      onClose: function onClose() {\n        setSubmenuOpen(false);\n      },\n      x: submenuPosition[0],\n      y: submenuPosition[1]\n    }, subOptions)) : /*#__PURE__*/React.createElement(MenuOptionContent, {\n      label: label,\n      disabled: disabled,\n      icon: renderIcon,\n      info: shortcut,\n      indented: indented\n    }))\n  );\n}\n\nMenuOptionContent.propTypes = {\n  /**\n   * Whether this option is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon that is displayed in front of the option\n   */\n  icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Whether the content should be indented\n   */\n  indented: PropTypes.bool,\n\n  /**\n   * Additional information such as shortcut or caret\n   */\n  info: PropTypes.node,\n\n  /**\n   * Rendered label for the MenuOptionContent\n   */\n  label: PropTypes.node.isRequired\n};\nMenuOption.propTypes = {\n  /**\n   * Specify the children of the MenuOption\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify whether this MenuOption is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Whether the content should be indented (for example because it's in a group with options that have icons).\n   * Is automatically set by Menu\n   */\n  indented: PropTypes.bool,\n\n  /**\n   * Optional prop to specify the kind of the MenuOption\n   */\n  kind: PropTypes.oneOf(['default', 'danger']),\n\n  /**\n   * Rendered label for the MenuOption\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Which nested level this option is located in.\n   * Is automatically set by Menu\n   */\n  level: PropTypes.number,\n\n  /**\n   * The onClick handler\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Rendered icon for the MenuOption.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Rendered shortcut for the MenuOption\n   */\n  shortcut: PropTypes.node\n};\nexport default MenuOption;","map":null,"metadata":{},"sourceType":"module"}