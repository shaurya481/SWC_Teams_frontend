{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"kind\", \"theme\", \"size\", \"className\", \"iconDescription\"];\n/**\n * Copyright IBM Corp. 2021, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Misuse16, Misuse20, Misuse24, Misuse32, ErrorFilled16, ErrorFilled20, ErrorFilled24, ErrorFilled32, WarningAltInvertedFilled16, WarningAltInvertedFilled20, WarningAltInvertedFilled24, WarningAltInvertedFilled32, WarningAltFilled16, WarningAltFilled20, WarningAltFilled24, WarningAltFilled32, UndefinedFilled16, UndefinedFilled20, UndefinedFilled24, UndefinedFilled32, UnknownFilled16, UnknownFilled20, UnknownFilled24, UnknownFilled32, CheckmarkFilled16, CheckmarkFilled20, CheckmarkFilled24, CheckmarkFilled32, InformationSquareFilled16, InformationSquareFilled20, InformationSquareFilled24, InformationSquareFilled32, Renew16, Renew20, Renew24, Renew32, Time16, Time20, Time24, Time32 } from '@carbon/icons-react';\nimport { pkg } from '../../settings';\nvar icons = {\n  fatal: {\n    sm: Misuse16,\n    md: Misuse20,\n    lg: Misuse24,\n    xlg: Misuse32\n  },\n  critical: {\n    sm: ErrorFilled16,\n    md: ErrorFilled20,\n    lg: ErrorFilled24,\n    xlg: ErrorFilled32\n  },\n  'major-warning': {\n    sm: WarningAltInvertedFilled16,\n    md: WarningAltInvertedFilled20,\n    lg: WarningAltInvertedFilled24,\n    xlg: WarningAltInvertedFilled32\n  },\n  'minor-warning': {\n    sm: WarningAltFilled16,\n    md: WarningAltFilled20,\n    lg: WarningAltFilled24,\n    xlg: WarningAltFilled32\n  },\n  undefined: {\n    sm: UndefinedFilled16,\n    md: UndefinedFilled20,\n    lg: UndefinedFilled24,\n    xlg: UndefinedFilled32\n  },\n  unknown: {\n    sm: UnknownFilled16,\n    md: UnknownFilled20,\n    lg: UnknownFilled24,\n    xlg: UnknownFilled32\n  },\n  normal: {\n    sm: CheckmarkFilled16,\n    md: CheckmarkFilled20,\n    lg: CheckmarkFilled24,\n    xlg: CheckmarkFilled32\n  },\n  info: {\n    sm: InformationSquareFilled16,\n    md: InformationSquareFilled20,\n    lg: InformationSquareFilled24,\n    xlg: InformationSquareFilled32\n  },\n  'in-progress': {\n    sm: Renew16,\n    md: Renew20,\n    lg: Renew24,\n    xlg: Renew32\n  },\n  running: {\n    sm: Renew16,\n    md: Renew20,\n    lg: Renew24,\n    xlg: Renew32\n  },\n  pending: {\n    sm: Time16,\n    md: Time20,\n    lg: Time24,\n    xlg: Time32\n  }\n};\nvar blockClass = \"\".concat(pkg.prefix, \"--status-icon\");\nvar componentName = 'StatusIcon';\nexport var StatusIcon = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _icons$kind;\n\n  var kind = _ref.kind,\n      theme = _ref.theme,\n      size = _ref.size,\n      className = _ref.className,\n      iconDescription = _ref.iconDescription,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var IconComponent = (_icons$kind = icons[kind]) === null || _icons$kind === void 0 ? void 0 : _icons$kind[size];\n  var classNames = cx(className, blockClass, \"\".concat(blockClass, \"--\").concat(theme), _defineProperty({}, \"\".concat(blockClass, \"--\").concat(theme, \"-\").concat(kind), kind));\n  return IconComponent && /*#__PURE__*/React.createElement(IconComponent, _extends({}, rest, {\n    className: classNames,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n});\nStatusIcon = pkg.checkComponentEnabled(StatusIcon, componentName);\nStatusIcon.displayName = componentName;\nStatusIcon.propTypes = {\n  /**\n   * Provide an optional class to be applied to the modal root node.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A required prop that provides a title element and tooltip for the icon for accessibility purposes\n   */\n  iconDescription: PropTypes.string.isRequired,\n\n  /**\n   * A required prop that displays the respective icon associated with the status\n   */\n  kind: PropTypes.oneOf(['fatal', 'critical', 'major-warning', 'minor-warning', 'undefined', 'unknown', 'normal', 'info', 'in-progress', 'running', 'pending']).isRequired,\n\n  /**\n   * A required prop that displays the size of the icon associate with the status\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xlg']).isRequired,\n\n  /**\n   * A required prop that displays the theme of the icon associated with the status\n   */\n  theme: PropTypes.oneOf(['light', 'dark']).isRequired\n};","map":null,"metadata":{},"sourceType":"module"}