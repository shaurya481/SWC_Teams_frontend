{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Search16, Close16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nimport { composeEventHandlers } from '../../tools/events';\nimport { keys, match } from '../../internal/keyboard';\nimport deprecate from '../../prop-types/deprecate';\nimport { FeatureFlagContext } from '../FeatureFlags';\nvar prefix = settings.prefix;\n\nvar Search = /*#__PURE__*/function (_Component) {\n  _inherits(Search, _Component);\n\n  var _super = _createSuper(Search);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hasContent: _this.props.value || _this.props.defaultValue || false,\n      prevValue: _this.props.value\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearInput\", function (evt) {\n      if (!_this.props.value) {\n        _this.input.value = '';\n\n        _this.props.onChange(evt);\n      } else {\n        var clearedEvt = Object.assign({}, evt.target, {\n          target: {\n            value: ''\n          }\n        });\n\n        _this.props.onChange(clearedEvt);\n      }\n\n      _this.setState({\n        hasContent: false\n      }, function () {\n        return _this.input.focus();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (evt) {\n      _this.setState({\n        hasContent: evt.target.value !== ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (evt) {\n      if (match(evt, keys.Escape)) {\n        _this.clearInput(evt);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          type = _this$props.type,\n          _this$props$id = _this$props.id,\n          id = _this$props$id === void 0 ? this._inputId = this._inputId || \"search__input__id_\".concat(Math.random().toString(36).substr(2)) : _this$props$id,\n          placeHolderText = _this$props.placeHolderText,\n          placeholder = _this$props.placeholder,\n          labelText = _this$props.labelText,\n          closeButtonLabelText = _this$props.closeButtonLabelText,\n          small = _this$props.small,\n          _this$props$size = _this$props.size,\n          size = _this$props$size === void 0 ? !small ? 'xl' : 'sm' : _this$props$size,\n          light = _this$props.light,\n          disabled = _this$props.disabled,\n          onChange = _this$props.onChange,\n          onKeyDown = _this$props.onKeyDown,\n          renderIcon = _this$props.renderIcon,\n          other = _objectWithoutProperties(_this$props, [\"className\", \"type\", \"id\", \"placeHolderText\", \"placeholder\", \"labelText\", \"closeButtonLabelText\", \"small\", \"size\", \"light\", \"disabled\", \"onChange\", \"onKeyDown\", \"renderIcon\"]);\n\n      var hasContent = this.state.hasContent;\n      var scope = this.context;\n      var enabled;\n\n      if (scope.enabled) {\n        enabled = scope.enabled('enable-v11-release');\n      }\n\n      var searchClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--search\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--search--sm\"), size === 'sm'), _defineProperty(_classNames, \"\".concat(prefix, \"--search--lg\"), enabled ? size === 'md' : size === 'lg'), _defineProperty(_classNames, \"\".concat(prefix, \"--search--xl\"), enabled ? size === 'lg' : size === 'xl'), _defineProperty(_classNames, \"\".concat(prefix, \"--search--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--search--disabled\"), disabled), _defineProperty(_classNames, className, className), _classNames));\n      var clearClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--search-close\"), true), _defineProperty(_classNames2, \"\".concat(prefix, \"--search-close--hidden\"), !hasContent), _classNames2));\n      var searchId = \"\".concat(id, \"-search\");\n      var searchIcon = renderIcon ? renderIcon : /*#__PURE__*/React.createElement(Search16, {\n        className: \"\".concat(prefix, \"--search-magnifier-icon\")\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        role: \"search\",\n        \"aria-labelledby\": searchId,\n        className: searchClasses\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--search-magnifier\"),\n        ref: function ref(magnifier) {\n          _this2.magnifier = magnifier;\n        }\n      }, searchIcon), /*#__PURE__*/React.createElement(\"label\", {\n        id: searchId,\n        htmlFor: id,\n        className: \"\".concat(prefix, \"--label\")\n      }, labelText), /*#__PURE__*/React.createElement(\"input\", _extends({\n        role: \"searchbox\",\n        autoComplete: \"off\"\n      }, other, {\n        type: type,\n        disabled: disabled,\n        className: \"\".concat(prefix, \"--search-input\"),\n        id: id,\n        placeholder: placeHolderText || placeholder,\n        onChange: composeEventHandlers([onChange, this.handleChange]),\n        onKeyDown: composeEventHandlers([onKeyDown, this.handleKeyDown]),\n        ref: function ref(input) {\n          _this2.input = input;\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: clearClasses,\n        disabled: disabled,\n        onClick: this.clearInput,\n        type: \"button\",\n        \"aria-label\": closeButtonLabelText\n      }, /*#__PURE__*/React.createElement(Close16, null)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref, state) {\n      var value = _ref.value;\n      var prevValue = state.prevValue;\n      return prevValue === value ? null : {\n        hasContent: !!value,\n        prevValue: value\n      };\n    }\n  }]);\n\n  return Search;\n}(Component);\n\n_defineProperty(Search, \"propTypes\", {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify a label to be read by screen readers on the \"close\" button\n   */\n  closeButtonLabelText: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify a custom `id` for the input\n   */\n  id: PropTypes.string,\n\n  /**\n   * Provide the label text for the Search icon\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Specify light version or default version of this control\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Optional callback called when the search value changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked on the key down event for the input\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Deprecated in favor of `placeholder`\n   */\n  placeHolderText: deprecate(PropTypes.string, \"\\nThe prop `placeHolderText` for Search has been deprecated in favor of `placeholder`. Please use `placeholder` instead.\"),\n\n  /**\n   * Provide an optional placeholder text for the Search.\n   * Note: if the label and placeholder differ,\n   * VoiceOver on Mac will read both\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Rendered icon for the Search.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify the search size\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n\n  /**\n   * Specify whether the Search should be a small variant\n   */\n\n  /**\n   * Specify whether the load was successful\n   */\n  small: deprecate(PropTypes.bool, \"\\nThe prop `small` for Search has been deprecated in favor of `size`. Please use `size=\\\"sm\\\"` instead.\"),\n\n  /**\n   * Optional prop to specify the type of the `<input>`\n   */\n  type: PropTypes.string,\n\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\n\n_defineProperty(Search, \"contextType\", FeatureFlagContext);\n\n_defineProperty(Search, \"defaultProps\", {\n  type: 'text',\n  placeholder: '',\n  closeButtonLabelText: 'Clear search input',\n  onChange: function onChange() {}\n});\n\nexport { Search as default };","map":null,"metadata":{},"sourceType":"module"}