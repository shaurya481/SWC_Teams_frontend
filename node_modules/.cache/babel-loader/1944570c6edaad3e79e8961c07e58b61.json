{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"overflowMenu\"],\n    _excluded2 = [\"children\"],\n    _excluded3 = [\"children\", \"renderIcon\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport ChevronDown16 from '@carbon/icons-react/lib/chevron--down/16';\nimport ChevronUp16 from '@carbon/icons-react/lib/chevron--up/16';\nimport { Button, OverflowMenuItem } from 'carbon-components-react';\nimport { OverflowMenu } from 'carbon-components-react/lib/components/OverflowMenu/OverflowMenu';\nimport setupGetInstanceId from 'carbon-components-react/lib/tools/setupGetInstanceId';\nimport classnames from 'classnames';\nimport { node, shape, string } from 'prop-types';\nimport React, { Children, createElement, useRef, useState } from 'react';\nvar getInstanceId = setupGetInstanceId();\nvar blockClass = 'security--combo-button';\n/**\n * The combo button consolidates similar actions, while exposing the most commonly used one.\n */\n\nvar ComboButton = function ComboButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      overflowMenu = _ref.overflowMenu,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(getInstanceId()),\n      instanceId = _useRef.current;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _Children$toArray$fil = Children.toArray(children).filter(Boolean).map(function (_ref2) {\n    var _ref2$props = _ref2.props,\n        children = _ref2$props.children,\n        props = _objectWithoutProperties(_ref2$props, _excluded2);\n\n    return _objectSpread(_objectSpread({}, props), {}, {\n      children: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(blockClass, \"__action\"),\n        title: children\n      }, children)\n    });\n  }),\n      _Children$toArray$fil2 = _toArray(_Children$toArray$fil),\n      primaryAction = _Children$toArray$fil2[0],\n      restActions = _Children$toArray$fil2.slice(1);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    className: classnames(blockClass, className),\n    \"data-floating-menu-container\": true\n  }), /*#__PURE__*/React.createElement(Button, primaryAction), restActions.length > 0 && /*#__PURE__*/React.createElement(OverflowMenu, _extends({}, overflowMenu, {\n    className: \"\".concat(blockClass, \"__overflow-menu\"),\n    menuOptionsClass: \"\".concat(blockClass, \"__overflow-menu__list\"),\n    onClick: function onClick() {\n      return !isOpen && setIsOpen(true);\n    },\n    onClose: function onClose() {\n      return setIsOpen(false);\n    },\n    renderIcon: function renderIcon() {\n      return /*#__PURE__*/createElement(isOpen ? ChevronUp16 : ChevronDown16, {\n        className: \"\".concat(blockClass, \"__overflow-menu__icon\")\n      });\n    },\n    flipped: true\n  }), restActions.map(function (_ref3, index) {\n    var children = _ref3.children,\n        Icon = _ref3.renderIcon,\n        action = _objectWithoutProperties(_ref3, _excluded3);\n\n    return /*#__PURE__*/React.createElement(OverflowMenuItem, _extends({}, action, {\n      key: \"\".concat(blockClass, \"--\").concat(instanceId, \"__overflow-menu__item__\").concat(index),\n      className: \"\".concat(blockClass, \"__overflow-menu__item\"),\n      itemText: /*#__PURE__*/React.createElement(React.Fragment, null, children, Icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(blockClass, \"__overflow-menu__item__icon\")\n      }, /*#__PURE__*/React.createElement(Icon, null)))\n    }));\n  })));\n};\n\nComboButton.propTypes = {\n  /** Provide the contents of the `ComboButton` */\n  children: node.isRequired,\n\n  /** Provide an optional class to be applied to the containing node */\n  className: string,\n\n  /** Provide the [props of the `OverflowMenu`](https://react.carbondesignsystem.com/?path=/docs/overflowmenu) */\n  overflowMenu: shape(OverflowMenu.propTypes)\n};\nComboButton.defaultProps = {\n  className: null,\n  overflowMenu: OverflowMenu.defaultProps\n};\nexport { ComboButton };","map":null,"metadata":{},"sourceType":"module"}