{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix;\n\nvar HeaderSideNavItems = function HeaderSideNavItems(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      hasDivider = _ref.hasDivider;\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-navigation\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-divider\"), hasDivider), _cx), customClassName);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, children);\n};\n\nHeaderSideNavItems.propTypes = {\n  /**\n   * The child nodes to be rendered\n   */\n  children: PropTypes.node,\n\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify if container will have a bottom divider to differentiate\n   * between original sidenav items and header menu items. False by default.\n   */\n  hasDivider: PropTypes.bool\n};\nHeaderSideNavItems.defaultProps = {\n  hasDivider: false\n};\nexport default HeaderSideNavItems;","map":null,"metadata":{},"sourceType":"module"}