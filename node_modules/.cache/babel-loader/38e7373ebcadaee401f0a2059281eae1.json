{"ast":null,"code":"import _slicedToArray from \"/Users/shauryaks/Desktop/SWC_Teams_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shauryaks/Desktop/SWC_Teams_frontend/src/TearSheet.js\";\n\nimport Search20 from \"@carbon/icons-react/lib/search/20\";\nimport Notification20 from \"@carbon/icons-react/lib/notification/20\";\nimport AppSwitcher20 from \"@carbon/icons-react/lib/app-switcher/20\";\nimport { HeaderContainer } from \"carbon-components-react/lib/components/UIShell/HeaderContainer\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Button, RadioButtonGroup, RadioButton, NumberInput, TextInput, TextArea } from 'carbon-components-react';\nimport { CreateTearsheet, CreateTearsheetStep } from \"@carbon/ibm-cloud-cognitive/es/components/CreateTearsheet\";\nimport { Content, Header, HeaderMenuButton, HeaderName, HeaderGlobalBar, HeaderGlobalAction, SkipToContent, SideNav, SideNavItems, SideNavLink, SideNavMenu, SideNavMenuItem } from \"carbon-components-react/lib/components/UIShell\";\n\nvar StoryContent = function StoryContent() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setisOpen = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isInValid = _useState6[0],\n      setisInValid = _useState6[1];\n\n  var handleClick = function handleClick(e) {\n    setisOpen(!isOpen);\n  }; // const handleTextInputValid = (val) => {\n  //   if(val!=\"\")\n  //     setisInValid(false);\n  //   else\n  //     setisInValid(true);\n  // }\n\n\n  var handleTextInput = function handleTextInput(e) {\n    setisInValid(false); //handleTextInput(val);\n  };\n\n  var content = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bx--grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bx--row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"style\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, \".exp--tearsheet-create-multi-step { opacity: 0 };\"), /*#__PURE__*/React.createElement(Button, {\n    dangerDescription: \"danger\",\n    disabled: false,\n    isExpressive: true,\n    kind: \"primary\",\n    onClick: handleClick,\n    size: \"default\",\n    tabIndex: 0,\n    tooltipAlignment: \"center\",\n    tooltipPosition: \"top\",\n    type: \"button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, \"Open CreateTearsheet\"), /*#__PURE__*/React.createElement(CreateTearsheet, {\n    open: isOpen,\n    backButtonText: \"Back\",\n    cancelButtonText: \"Cancel\",\n    className: \"exp--tearsheet-create-multi-step\",\n    description: \"Specify details for the new topic you want to create\",\n    label: \"This is the label of the multi step tearsheet\",\n    nextButtonText: \"Next\",\n    onClose: handleClick,\n    onRequestSubmit: function noRefCheck() {},\n    submitButtonText: \"Create\",\n    title: \"Create topic\",\n    verticalPosition: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CreateTearsheetStep, {\n    onNext: function noRefCheck() {},\n    title: \"Project Name\",\n    type: \"CreateTearsheetStep\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"exp--tearsheet-create-multi-step__description exp--tearsheet-create-multi-step__heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"This is the unique name used to recognize your topic\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"exp--tearsheet-create-multi-step__description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"It will also be used by your producers and consumers as part of the connection information, so make it something easy to recognize.\"), /*#__PURE__*/React.createElement(TextInput, {\n    disabled: false,\n    helperText: \"\",\n    id: \"tearsheet-multi-step-story-text-input-multi-step-1\",\n    inline: false,\n    invalid: isInValid,\n    invalidText: \"This is a required field\",\n    labelText: \"Topic name*\",\n    light: false,\n    onBlur: function noRefCheck() {},\n    onChange: handleTextInput,\n    onClick: function noRefCheck() {},\n    placeholder: \"Enter topic name\",\n    type: \"text\",\n    warn: false,\n    warnText: \"\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    disabled: false,\n    helperText: \"\",\n    id: \"tearsheet-multi-step-story-text-input-multi-step-1-input-2\",\n    inline: false,\n    invalid: false,\n    invalidText: \"\",\n    labelText: \"Topic description\",\n    light: false,\n    onChange: function noRefCheck() {},\n    onClick: function noRefCheck() {},\n    placeholder: \"Enter topic description\",\n    type: \"text\",\n    warn: false,\n    warnText: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    disabled: false,\n    helperText: \"\",\n    id: \"tearsheet-multi-step-story-text-input-multi-step-1-input-3\",\n    inline: false,\n    invalid: false,\n    invalidText: \"\",\n    labelText: \"Topic version\",\n    light: false,\n    onChange: function noRefCheck() {},\n    onClick: function noRefCheck() {},\n    placeholder: \"Enter topic version\",\n    type: \"text\",\n    warn: false,\n    warnText: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"es_components_Toggle_Toggle\", {\n    className: \"exp--tearsheet-create-multi-step__error--toggle\",\n    id: \"simulated-error-toggle\",\n    labelText: \"Simulate error\",\n    onToggle: function noRefCheck() {},\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(CreateTearsheetStep, {\n    title: \"Github Url\",\n    type: \"CreateTearsheetStep\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"exp--tearsheet-create-multi-step__description exp--tearsheet-create-multi-step__heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"One or more partitions make up a topic. A partition is an ordered list of messages.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"exp--tearsheet-create-multi-step__description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"Partitions are distributed across the brokers in order to increase the scalability of your topic. You can also use them to distribute messages across the members of a consumer group.\"), /*#__PURE__*/React.createElement(NumberInput, {\n    helperText: \"1 partition is sufficient for getting started but, production systems often have more.\",\n    id: \"carbon-number\",\n    invalidText: \"Max partitions is 100, min is 1\",\n    label: \"Partitions\",\n    max: 100,\n    min: 1,\n    onChange: function noRefCheck() {},\n    value: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(CreateTearsheetStep, {\n    onNext: function noRefCheck() {},\n    title: \"Project Logo\",\n    type: \"CreateTearsheetStep\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"exp--tearsheet-create-multi-step__description exp--tearsheet-create-multi-step__heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \"This is how long messages are retained before they are deleted.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"exp--tearsheet-create-multi-step__description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, \"If your messages are not read by a consumer within this time, they will be missed.\"), /*#__PURE__*/React.createElement(RadioButtonGroup, {\n    defaultSelected: \"one-day\",\n    labelPosition: \"right\",\n    legendText: \"Message retention\",\n    name: \"radio-button-group\",\n    onChange: function noRefCheck() {},\n    orientation: \"vertical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    id: \"one-day\",\n    labelText: \"A day\",\n    value: \"one-day\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RadioButton, {\n    id: \"one-week\",\n    labelText: \"A week\",\n    value: \"one-week\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RadioButton, {\n    id: \"one-month\",\n    labelText: \"A month\",\n    value: \"one-month\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RadioButton, {\n    id: \"custom\",\n    labelText: \"Custom\",\n    value: \"custom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(CreateTearsheetStep, {\n    onNext: function noRefCheck() {},\n    title: \"Project Description\",\n    type: \"CreateTearsheetStep\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 10,\n    cols: 80,\n    helperText: \"\",\n    id: \"test5\",\n    invalidText: \"Invalid error message.\",\n    labelText: \"Write Your Project Description\",\n    placeholder: \"Placeholder text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }))))));\n  return /*#__PURE__*/React.createElement(Content, {\n    id: \"main-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 10\n    }\n  }, content);\n};\n\nvar TearSheet = function TearSheet() {\n  return /*#__PURE__*/React.createElement(StoryContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  });\n};\n\nexport default TearSheet;","map":{"version":3,"sources":["/Users/shauryaks/Desktop/SWC_Teams_frontend/src/TearSheet.js"],"names":["Search20","Notification20","AppSwitcher20","HeaderContainer","React","Component","useState","useEffect","Button","RadioButtonGroup","RadioButton","NumberInput","TextInput","TextArea","CreateTearsheet","CreateTearsheetStep","Content","Header","HeaderMenuButton","HeaderName","HeaderGlobalBar","HeaderGlobalAction","SkipToContent","SideNav","SideNavItems","SideNavLink","SideNavMenu","SideNavMenuItem","StoryContent","val","setVal","isOpen","setisOpen","isInValid","setisInValid","handleClick","e","handleTextInput","content","noRefCheck","TearSheet"],"mappings":"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","sourcesContent":["import Search20 from \"@carbon/icons-react/lib/search/20\";\nimport Notification20 from \"@carbon/icons-react/lib/notification/20\";\nimport AppSwitcher20 from \"@carbon/icons-react/lib/app-switcher/20\";\nimport {HeaderContainer} from \"carbon-components-react/lib/components/UIShell/HeaderContainer\";\nimport React, { Component, useState, useEffect }  from 'react';\nimport { Button, RadioButtonGroup, RadioButton, NumberInput, TextInput, TextArea} from 'carbon-components-react';\nimport { CreateTearsheet, CreateTearsheetStep } from \"@carbon/ibm-cloud-cognitive/es/components/CreateTearsheet\";\nimport {\n    Content,\n    Header,\n    HeaderMenuButton,\n    HeaderName,\n    HeaderGlobalBar,\n    HeaderGlobalAction,\n    SkipToContent,\n    SideNav,\n    SideNavItems,\n    SideNavLink,\n    SideNavMenu,\n    SideNavMenuItem\n  } from \"carbon-components-react/lib/components/UIShell\";\n\nconst StoryContent = () => {\n\n  const [val, setVal] = useState(false);\n  const [isOpen, setisOpen] = useState(false);\n  const [isInValid, setisInValid] = useState(true);\n\n  const handleClick = (e) => {\n    setisOpen(!isOpen);\n  }\n\n  // const handleTextInputValid = (val) => {\n  //   if(val!=\"\")\n  //     setisInValid(false);\n  //   else\n  //     setisInValid(true);\n  // }\n\n  const handleTextInput = (e) => {\n    setisInValid(false);\n    //handleTextInput(val);\n  }\n\n\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n      <div>\n  <style>\n    {`.exp--tearsheet-create-multi-step { opacity: 0 };`}\n\n  </style>\n\n  <Button\n    dangerDescription=\"danger\"\n    disabled={false}\n    isExpressive={true}\n    kind=\"primary\"\n    onClick={handleClick}\n    size=\"default\"\n    tabIndex={0}\n    tooltipAlignment=\"center\"\n    tooltipPosition=\"top\"\n    type=\"button\"\n  >\n    Open CreateTearsheet\n  </Button>\n  <CreateTearsheet\n    open={isOpen}\n    backButtonText=\"Back\"\n    cancelButtonText=\"Cancel\"\n    className=\"exp--tearsheet-create-multi-step\"\n    description=\"Specify details for the new topic you want to create\"\n    label=\"This is the label of the multi step tearsheet\"\n    nextButtonText=\"Next\"\n    onClose={handleClick}\n    onRequestSubmit={function noRefCheck(){}}\n    submitButtonText=\"Create\"\n    title=\"Create topic\"\n    verticalPosition=\"normal\"\n  >\n    \n    <CreateTearsheetStep\n      onNext={function noRefCheck(){}}\n      title=\"Project Name\"\n      type=\"CreateTearsheetStep\"\n    >\n      <h6 className=\"exp--tearsheet-create-multi-step__description exp--tearsheet-create-multi-step__heading\">\n        This is the unique name used to recognize your topic\n      </h6>\n      <p className=\"exp--tearsheet-create-multi-step__description\">\n        It will also be used by your producers and consumers as part of the connection information, so make it something easy to recognize.\n      </p>\n      <TextInput\n        disabled={false}\n        helperText=\"\"\n        id=\"tearsheet-multi-step-story-text-input-multi-step-1\"\n        inline={false}\n        invalid={isInValid}\n        invalidText=\"This is a required field\"\n        labelText=\"Topic name*\"\n        light={false}\n        onBlur={function noRefCheck(){}}\n        onChange={handleTextInput}\n        onClick={function noRefCheck(){}}\n        placeholder=\"Enter topic name\"\n        type=\"text\"\n        warn={false}\n        warnText=\"\"\n        required={true}\n      />\n      <TextInput\n        disabled={false}\n        helperText=\"\"\n        id=\"tearsheet-multi-step-story-text-input-multi-step-1-input-2\"\n        inline={false}\n        invalid={false}\n        invalidText=\"\"\n        labelText=\"Topic description\"\n        light={false}\n        onChange={function noRefCheck(){}}\n        onClick={function noRefCheck(){}}\n        placeholder=\"Enter topic description\"\n        type=\"text\"\n        warn={false}\n        warnText=\"\"\n      />\n      <TextInput\n        disabled={false}\n        helperText=\"\"\n        id=\"tearsheet-multi-step-story-text-input-multi-step-1-input-3\"\n        inline={false}\n        invalid={false}\n        invalidText=\"\"\n        labelText=\"Topic version\"\n        light={false}\n        onChange={function noRefCheck(){}}\n        onClick={function noRefCheck(){}}\n        placeholder=\"Enter topic version\"\n        type=\"text\"\n        warn={false}\n        warnText=\"\"\n      />\n      <es_components_Toggle_Toggle\n        className=\"exp--tearsheet-create-multi-step__error--toggle\"\n        id=\"simulated-error-toggle\"\n        labelText=\"Simulate error\"\n        onToggle={function noRefCheck(){}}\n        size=\"sm\"\n      />\n    </CreateTearsheetStep>\n    <CreateTearsheetStep\n      title=\"Github Url\"\n      type=\"CreateTearsheetStep\"\n    >\n      <h6 className=\"exp--tearsheet-create-multi-step__description exp--tearsheet-create-multi-step__heading\">\n        One or more partitions make up a topic. A partition is an ordered list of messages.\n      </h6>\n      <p className=\"exp--tearsheet-create-multi-step__description\">\n        Partitions are distributed across the brokers in order to increase the scalability of your topic. You can also use them to distribute messages across the members of a consumer group.\n      </p>\n      <NumberInput\n        helperText=\"1 partition is sufficient for getting started but, production systems often have more.\"\n        id=\"carbon-number\"\n        invalidText=\"Max partitions is 100, min is 1\"\n        label=\"Partitions\"\n        max={100}\n        min={1}\n        onChange={function noRefCheck(){}}\n        value={1}\n      />\n    </CreateTearsheetStep>\n    <CreateTearsheetStep\n      onNext={function noRefCheck(){}}\n      title=\"Project Logo\"\n      type=\"CreateTearsheetStep\"\n    >\n      <h6 className=\"exp--tearsheet-create-multi-step__description exp--tearsheet-create-multi-step__heading\">\n        This is how long messages are retained before they are deleted.\n      </h6>\n      <p className=\"exp--tearsheet-create-multi-step__description\">\n        If your messages are not read by a consumer within this time, they will be missed.\n      </p>\n      <RadioButtonGroup\n        defaultSelected=\"one-day\"\n        labelPosition=\"right\"\n        legendText=\"Message retention\"\n        name=\"radio-button-group\"\n        onChange={function noRefCheck(){}}\n        orientation=\"vertical\"\n      >\n        <RadioButton\n        id=\"one-day\"\n        labelText=\"A day\"\n        value=\"one-day\"\n        />\n        <RadioButton\n        id=\"one-week\"\n        labelText=\"A week\"\n        value=\"one-week\"\n        />\n        <RadioButton\n        id=\"one-month\"\n        labelText=\"A month\"\n        value=\"one-month\"\n        />\n        <RadioButton\n        id=\"custom\"\n        labelText=\"Custom\"\n        value=\"custom\"\n        />\n      </RadioButtonGroup>\n    </CreateTearsheetStep>\n    <CreateTearsheetStep\n      onNext={function noRefCheck(){}}\n      title=\"Project Description\"\n      type=\"CreateTearsheetStep\"\n    >\n      <TextArea\n      rows={10}\n      cols={80}\n      helperText=\"\"\n      id=\"test5\"\n      invalidText=\"Invalid error message.\"\n      labelText=\"Write Your Project Description\"\n      placeholder=\"Placeholder text\"\n      >\n      </TextArea>\n    </CreateTearsheetStep>\n  </CreateTearsheet>\n</div>\n      </div>\n    </div>\n  );\n  return <Content id=\"main-content\">{content}</Content>;\n};\n\n\nconst TearSheet = () => {\n    return(\n      \n      <StoryContent />\n\n    );\n}\n \nexport default TearSheet;"]},"metadata":{},"sourceType":"module"}