{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} //\n// Copyright IBM Corp. 2020, 2021\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n\nvar defaults = {\n  prefix: 'exp',\n  // by default only released components are set to true\n  component: {\n    // reviewed and released components:\n    AboutModal: true,\n    CreateModal: true,\n    EmptyState: true,\n    ErrorEmptyState: true,\n    ExportModal: true,\n    HTTPError403: true,\n    HTTPError404: true,\n    HTTPErrorOther: true,\n    ImportModal: true,\n    NotificationsPanel: true,\n    NoDataEmptyState: true,\n    NoTagsEmptyState: true,\n    NotFoundEmptyState: true,\n    NotificationsEmptyState: true,\n    RemoveModal: true,\n    Saving: true,\n    StatusIcon: true,\n    Tearsheet: true,\n    TearsheetNarrow: true,\n    UnauthorizedEmptyState: true,\n    UserProfileImage: true,\n    // other public components not yet reviewed and released:\n    ActionBarItem: false,\n    APIKeyDownloader: false,\n    APIKeyModal: false,\n    CreateFullPage: false,\n    CreateFullPageSection: false,\n    CreateFullPageStep: false,\n    CreateSidePanel: false,\n    CreateTearsheet: false,\n    CreateTearsheetStep: false,\n    CreateTearsheetSection: false,\n    ContextHeader: false,\n    ExampleComponent: false,\n    ExpressiveCard: false,\n    LoadingBar: false,\n    ModifiedTabs: false,\n    PageHeader: false,\n    ProductiveCard: false,\n    SidePanel: false,\n    TagSet: false,\n    WebTerminal: false\n    /* new component flags here - comment used by generate CLI */\n\n  },\n  // feature level flags\n  feature: {\n    'a-new-feature': false\n  }\n};\n\nvar warningMessageComponent = function warningMessageComponent(property) {\n  return \"IBM Cloud Cognitive (WARNING): Component \\\"\".concat(property, \"\\\" enabled via feature flags. This component has not yet completed its review process.\");\n};\n\nvar warningMessageFeature = function warningMessageFeature(property) {\n  return \"IBM Cloud Cognitive (WARNING): Feature \\\"\".concat(property, \"\\\" enabled via feature flags.\");\n};\n\nvar warningMessageAllComponents = 'IBM Cloud Cognitive (WARNING): All components enabled through use of setAllComponents. This includes components that have not yet completed their review process.';\nvar warningMessageAllFeatures = 'IBM Cloud Cognitive (WARNING): All features enabled through use of setAllFeatures'; // Values to represent overrides for component or feature settings.\n// Each value maps the initial value to the value that should be returned.\n\nvar all = {\n  INITIAL: function INITIAL(v) {\n    return v;\n  },\n  ON: function ON() {\n    return true;\n  },\n  OFF: function OFF() {\n    return false;\n  }\n};\nvar allComponents = all.INITIAL;\nvar allFeatures = all.INITIAL;\nvar silent = false;\nvar component = new Proxy(_objectSpread({}, defaults.component), {\n  set: function set(target, property, value) {\n    value && !silent && console.warn(warningMessageComponent(property));\n    target[property] = value;\n    return true; // value set\n  },\n  get: function get(target, property) {\n    var _target$property;\n\n    return allComponents((_target$property = target[property]) !== null && _target$property !== void 0 ? _target$property : false);\n  }\n});\nvar feature = new Proxy(_objectSpread({}, defaults.feature), {\n  set: function set(target, property, value) {\n    value && !silent && console.warn(warningMessageFeature(property));\n    target[property] = value;\n    return true; // value set\n  },\n  get: function get(target, property) {\n    var _target$property2;\n\n    return allFeatures((_target$property2 = target[property]) !== null && _target$property2 !== void 0 ? _target$property2 : false);\n  }\n});\nexport default {\n  prefix: defaults.prefix,\n  component: component,\n  feature: feature,\n  isComponentEnabled: function isComponentEnabled(componentOrName) {\n    var byDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var componentName = (componentOrName === null || componentOrName === void 0 ? void 0 : componentOrName.displayName) || (componentOrName === null || componentOrName === void 0 ? void 0 : componentOrName.name) || componentOrName;\n    return byDefault ? defaults.component[componentName] : component[componentName];\n  },\n  isComponentPublic: function isComponentPublic(componentOrName) {\n    var byDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var componentName = (componentOrName === null || componentOrName === void 0 ? void 0 : componentOrName.displayName) || (componentOrName === null || componentOrName === void 0 ? void 0 : componentOrName.name) || componentOrName;\n    return Object.prototype.hasOwnProperty.call(byDefault ? defaults.component : component, componentName);\n  },\n  isFeatureEnabled: function isFeatureEnabled(featureName) {\n    var byDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return byDefault ? defaults.feature[featureName] : feature[featureName];\n  },\n  isFeaturePublic: function isFeaturePublic(featureName) {\n    var byDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return Object.prototype.hasOwnProperty.call(byDefault ? defaults.feature : feature, featureName);\n  },\n  setAllComponents: function setAllComponents(enabled) {\n    enabled === true && !silent && console.warn(warningMessageAllComponents);\n    allComponents = enabled === true ? all.ON : enabled === false ? all.OFF : all.INITIAL;\n  },\n  setAllFeatures: function setAllFeatures(enabled) {\n    enabled === true && !silent && console.warn(warningMessageAllFeatures);\n    allFeatures = enabled === true ? all.ON : enabled === false ? all.OFF : all.INITIAL;\n  },\n  _silenceWarnings: function _silenceWarnings(value) {\n    // This will suppress console warnings when components or feature flags\n    // are enabled, and should only be used when this is not an issue, such\n    // as in internal test suites and storybook builds.\n    silent = value;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}