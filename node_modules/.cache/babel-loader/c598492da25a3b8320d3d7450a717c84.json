{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _keyboard = require(\"../../internal/keyboard\");\n\nvar _AriaPropTypes = require(\"../../prop-types/AriaPropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar prefix = _carbonComponents.settings.prefix;\n\nvar defaultRenderMenuContent = function defaultRenderMenuContent() {\n  return /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronDown16, {\n    className: \"\".concat(prefix, \"--header__menu-arrow\")\n  });\n};\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\n\n\nvar HeaderMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderMenu, _React$Component);\n\n  var _super = _createSuper(HeaderMenu);\n\n  function HeaderMenu(props) {\n    var _this;\n\n    _classCallCheck(this, HeaderMenu);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_subMenus\", /*#__PURE__*/_react.default.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnClick\", function (e) {\n      var subMenusNode = _this._subMenus.current;\n\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          expanded: !prevState.expanded\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnKeyDown\", function (event) {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if ((0, _keyboard.matches)(event, [_keyboard.keys.Enter, _keyboard.keys.Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        _this.setState(function (prevState) {\n          return {\n            expanded: !prevState.expanded\n          };\n        });\n\n        return;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnBlur\", function (event) {\n      // Rough guess for a blur event that is triggered outside of our menu or\n      // menubar context\n      var itemTriggeredBlur = _this.items.find(function (element) {\n        return element === event.relatedTarget;\n      });\n\n      if (event.relatedTarget && (event.relatedTarget.getAttribute('href') && event.relatedTarget.getAttribute('href') !== '#' || itemTriggeredBlur)) {\n        return;\n      }\n\n      _this.setState({\n        expanded: false,\n        selectedIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMenuButtonRef\", function (node) {\n      if (_this.props.focusRef) {\n        _this.props.focusRef(node);\n      }\n\n      _this.menuButtonRef = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemRef\", function (index) {\n      return function (node) {\n        _this.items[index] = node;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMenuClose\", function (event) {\n      // Handle ESC keydown for closing the expanded menu.\n      if ((0, _keyboard.matches)(event, [_keyboard.keys.Escape]) && _this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        _this.setState(function () {\n          return {\n            expanded: false,\n            selectedIndex: null\n          };\n        }); // Return focus to menu button when the user hits ESC.\n\n\n        _this.menuButtonRef.focus();\n\n        return;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderMenuItem\", function (item, index) {\n      if ( /*#__PURE__*/_react.default.isValidElement(item)) {\n        return /*#__PURE__*/_react.default.cloneElement(item, {\n          ref: _this.handleItemRef(index)\n        });\n      }\n    });\n\n    _this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    _this.items = [];\n    return _this;\n  }\n  /**\n   * Toggle the expanded state of the menu on click.\n   */\n\n\n  _createClass(HeaderMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ariaLabel = _this$props['aria-label'],\n          ariaLabelledBy = _this$props['aria-labelledby'],\n          customClassName = _this$props.className,\n          children = _this$props.children,\n          MenuContent = _this$props.renderMenuContent,\n          menuLinkName = _this$props.menuLinkName;\n      var accessibilityLabel = {\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledBy\n      };\n      var className = (0, _classnames.default)(\"\".concat(prefix, \"--header__submenu\"), customClassName); // Notes on eslint comments and based on the examples in:\n      // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n      // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n      // users\n      // - aria-haspopup can definitely have the value \"menu\"\n      // - aria-expanded is on their example node with role=\"menuitem\"\n      // - href can be set to javascript:void(0), ideally this will be a button\n\n      return /*#__PURE__*/_react.default.createElement(\"li\", {\n        // eslint-disable-line jsx-a11y/mouse-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n        className: className,\n        onKeyDown: this.handleMenuClose,\n        onClick: this.handleOnClick,\n        onBlur: this.handleOnBlur\n      }, /*#__PURE__*/_react.default.createElement(\"a\", _extends({\n        // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n        \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n        ,\n        \"aria-expanded\": this.state.expanded,\n        className: \"\".concat(prefix, \"--header__menu-item \").concat(prefix, \"--header__menu-title\"),\n        href: \"#\",\n        onKeyDown: this.handleOnKeyDown,\n        ref: this.handleMenuButtonRef,\n        tabIndex: 0\n      }, accessibilityLabel), menuLinkName, /*#__PURE__*/_react.default.createElement(MenuContent, null)), /*#__PURE__*/_react.default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n        ref: this._subMenus,\n        className: \"\".concat(prefix, \"--header__menu\")\n      }), _react.default.Children.map(children, this._renderMenuItem)));\n    }\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n\n  }]);\n\n  return HeaderMenu;\n}(_react.default.Component);\n\n_defineProperty(HeaderMenu, \"propTypes\", _objectSpread(_objectSpread({}, _AriaPropTypes.AriaLabelPropType), {}, {\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: _propTypes.default.func,\n\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: _propTypes.default.string.isRequired,\n\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: _propTypes.default.func,\n\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: _propTypes.default.number\n}));\n\n_defineProperty(HeaderMenu, \"defaultProps\", {\n  renderMenuContent: defaultRenderMenuContent\n});\n\nvar HeaderMenuForwardRef = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  return /*#__PURE__*/_react.default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\n\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\nvar _default = HeaderMenuForwardRef;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}