{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { settings } from 'carbon-components';\nimport setupGetInstanceId from '../../../tools/setupGetInstanceId';\nimport Select from '../../Select';\nimport SelectItem from '../../SelectItem';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\n\nfunction PageSelector(_ref) {\n  var className = _ref.className,\n      currentPage = _ref.currentPage,\n      id = _ref.id,\n      labelText = _ref.labelText,\n      totalPages = _ref.totalPages,\n      other = _objectWithoutProperties(_ref, [\"className\", \"currentPage\", \"id\", \"labelText\", \"totalPages\"]);\n\n  var namespace = \"\".concat(prefix, \"--unstable-pagination__page-selector\");\n  var instanceId = \"\".concat(namespace, \"__select-\").concat(getInstanceId());\n\n  var renderPages = function renderPages(total) {\n    var pages = [];\n\n    for (var counter = 1; counter <= total; counter += 1) {\n      pages.push( /*#__PURE__*/React.createElement(SelectItem, {\n        key: counter,\n        value: counter,\n        text: String(counter)\n      }));\n    }\n\n    return pages;\n  };\n\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    className: classnames(namespace, className),\n    hideLabel: true,\n    id: instanceId || id,\n    inline: true,\n    labelText: labelText,\n    value: currentPage\n  }, other), renderPages(totalPages));\n}\n\nPageSelector.propTypes = {\n  /** Extra class names to add. */\n  className: PropTypes.string,\n\n  /** The current page. */\n  currentPage: PropTypes.number.isRequired,\n\n  /** The unique ID of this component instance. */\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Translatable string to label the page selector element. */\n  labelText: PropTypes.string,\n\n  /**\n   * Total number of pages.\n   * This value is calculated using a valid `totalItems` prop passed to the parent `Unstable_Pagination`.\n   */\n  totalPages: PropTypes.number.isRequired\n};\nPageSelector.defaultProps = {\n  className: null,\n  id: 1,\n  labelText: 'Current page number'\n};\nexport default PageSelector;","map":null,"metadata":{},"sourceType":"module"}