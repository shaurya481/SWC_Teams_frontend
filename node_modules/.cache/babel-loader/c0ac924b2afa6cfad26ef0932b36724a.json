{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Function} propType The original prop type checker.\n * @returns {Function} The new prop type checker for `onChange` that makes it required if `value` exists and `readOnly` does not exist.\n */\nexport default function requiredIfValueExists(propType) {\n  return function check(props, propName, componentName) {\n    var onChange = props[propName],\n        value = props.value,\n        readOnly = props.readOnly;\n    var exists = onChange !== undefined;\n    var valueExists = value !== undefined;\n\n    if (process.env.NODE_ENV !== \"production\" && !exists && valueExists && !readOnly) {\n      return new Error(\"You provided a value prop to `\".concat(componentName, \"` without an `onChange` handler. \") + 'This will render a read-only field. ' + 'If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.');\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}","map":null,"metadata":{},"sourceType":"module"}