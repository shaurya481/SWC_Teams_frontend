{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Calendar16, WarningFilled16, WarningAltFilled16 } from '@carbon/icons-react';\nvar prefix = settings.prefix;\n\nvar DatePickerInput = /*#__PURE__*/function (_Component) {\n  _inherits(DatePickerInput, _Component);\n\n  var _super = _createSuper(DatePickerInput);\n\n  function DatePickerInput() {\n    _classCallCheck(this, DatePickerInput);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DatePickerInput, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _classNames3,\n          _this = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          labelText = _this$props.labelText,\n          disabled = _this$props.disabled,\n          invalid = _this$props.invalid,\n          invalidText = _this$props.invalidText,\n          hideLabel = _this$props.hideLabel,\n          _onChange = _this$props.onChange,\n          _onClick = _this$props.onClick,\n          placeholder = _this$props.placeholder,\n          type = _this$props.type,\n          datePickerType = _this$props.datePickerType,\n          pattern = _this$props.pattern,\n          iconDescription = _this$props.iconDescription,\n          openCalendar = _this$props.openCalendar,\n          size = _this$props.size,\n          warn = _this$props.warn,\n          warnText = _this$props.warnText,\n          other = _objectWithoutProperties(_this$props, [\"id\", \"labelText\", \"disabled\", \"invalid\", \"invalidText\", \"hideLabel\", \"onChange\", \"onClick\", \"placeholder\", \"type\", \"datePickerType\", \"pattern\", \"iconDescription\", \"openCalendar\", \"size\", \"warn\", \"warnText\"]);\n\n      var datePickerInputProps = {\n        id: id,\n        onChange: function onChange(evt) {\n          if (!disabled) {\n            _onChange(evt);\n          }\n        },\n        onClick: function onClick(evt) {\n          if (!disabled) {\n            _onClick(evt);\n          }\n        },\n        placeholder: placeholder,\n        type: type,\n        pattern: pattern\n      };\n      var wrapperClasses = classNames(\"\".concat(prefix, \"--date-picker-input__wrapper\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--date-picker-input__wrapper--invalid\"), invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--date-picker-input__wrapper--warn\"), warn), _classNames));\n      var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames2, \"\".concat(prefix, \"--label--disabled\"), disabled), _classNames2));\n      var inputClasses = classNames(\"\".concat(prefix, \"--date-picker__input\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--date-picker__input--\").concat(size), size), _defineProperty(_classNames3, \"\".concat(prefix, \"--date-picker__input--invalid\"), invalid), _classNames3));\n\n      var datePickerIcon = function () {\n        if (datePickerType === 'simple' && !invalid && !warn) {\n          return;\n        }\n\n        if (invalid) {\n          return /*#__PURE__*/React.createElement(WarningFilled16, {\n            className: \"\".concat(prefix, \"--date-picker__icon \").concat(prefix, \"--date-picker__icon--invalid\")\n          });\n        }\n\n        if (!invalid && warn) {\n          return /*#__PURE__*/React.createElement(WarningAltFilled16, {\n            className: \"\".concat(prefix, \"--date-picker__icon \").concat(prefix, \"--date-picker__icon--warn\")\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(Calendar16, {\n          className: \"\".concat(prefix, \"--date-picker__icon\"),\n          \"aria-label\": iconDescription,\n          onClick: openCalendar,\n          role: \"img\"\n        }, iconDescription && /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n      }();\n\n      var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: labelClasses\n      }, labelText) : null;\n      var error = null;\n\n      if (invalid) {\n        error = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefix, \"--form-requirement\")\n        }, invalidText);\n      } else if (warn) {\n        error = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefix, \"--form-requirement\")\n        }, warnText);\n      }\n\n      var containerClasses = classNames(\"\".concat(prefix, \"--date-picker-container\"), _defineProperty({}, \"\".concat(prefix, \"--date-picker--nolabel\"), !label));\n      var input = invalid ? /*#__PURE__*/React.createElement(\"input\", _extends({}, other, datePickerInputProps, {\n        disabled: disabled,\n        ref: function ref(input) {\n          _this.input = input;\n        },\n        \"data-invalid\": true,\n        className: inputClasses\n      })) : /*#__PURE__*/React.createElement(\"input\", _extends({\n        ref: function ref(input) {\n          _this.input = input;\n        }\n      }, other, datePickerInputProps, {\n        disabled: disabled,\n        className: inputClasses\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: containerClasses\n      }, label, /*#__PURE__*/React.createElement(\"div\", {\n        className: wrapperClasses\n      }, input, datePickerIcon), error);\n    }\n  }]);\n\n  return DatePickerInput;\n}(Component);\n\n_defineProperty(DatePickerInput, \"propTypes\", {\n  /**\n   * The type of the date picker:\n   *\n   * * `simple` - Without calendar dropdown.\n   * * `single` - With calendar dropdown and single date.\n   * * `range` - With calendar dropdown and a date range.\n   */\n  datePickerType: PropTypes.oneOf(['simple', 'single', 'range']),\n\n  /**\n   * Specify whether or not the input should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify if the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * The description of the calendar icon.\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an id that uniquely identifies the `<input>`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether or not the input should be invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Specify the text to be rendered when the input is invalid\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Specify an `onChange` handler that is called whenever a change in the\n   * input field has occurred\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide a function to be called when the input field is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide a function to be called when the input field is clicked\n   */\n  openCalendar: PropTypes.func,\n\n  /**\n   * Provide a regular expression that the input value must match\n   */\n  pattern: function pattern(props, propName, componentName) {\n    if (props[propName] === undefined) {\n      return;\n    }\n\n    try {\n      new RegExp(props[propName]);\n    } catch (e) {\n      return new Error(\"Invalid value of prop '\".concat(propName, \"' supplied to '\").concat(componentName, \"', it should be a valid regular expression\"));\n    }\n  },\n\n  /**\n   * Specify the placeholder text\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Specify the size of the Date Picker Input. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   * TODO V11: remove `xl` (replaced with lg)\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n\n  /**\n   * Specify the type of the `<input>`\n   */\n  type: PropTypes.string,\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n});\n\n_defineProperty(DatePickerInput, \"defaultProps\", {\n  pattern: '\\\\d{1,2}\\\\/\\\\d{1,2}\\\\/\\\\d{4}',\n  type: 'text',\n  disabled: false,\n  invalid: false,\n  onClick: function onClick() {},\n  onChange: function onChange() {}\n});\n\nexport { DatePickerInput as default };","map":null,"metadata":{},"sourceType":"module"}