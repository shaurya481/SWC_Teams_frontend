{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Copy16 } from '@carbon/icons-react';\nimport Copy from '../Copy';\nvar prefix = settings.prefix;\nexport default function CopyButton(_ref) {\n  var iconDescription = _ref.iconDescription,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, [\"iconDescription\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Copy, _extends({\n    className: classnames(className, \"\".concat(prefix, \"--copy-btn\")),\n    \"aria-label\": iconDescription,\n    title: iconDescription\n  }, other), /*#__PURE__*/React.createElement(Copy16, {\n    className: \"\".concat(prefix, \"--snippet__icon\")\n  }));\n}\nCopyButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the underlying `<button>`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the string that is displayed when the button is clicked and the\n   * content is copied\n   */\n  feedback: PropTypes.string,\n\n  /**\n   * Specify the time it takes for the feedback message to timeout\n   */\n  feedbackTimeout: PropTypes.number,\n\n  /**\n   * Provide a description for the icon representing the copy action that can\n   * be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * `<button>` is clicked\n   */\n  onClick: PropTypes.func\n};\nCopyButton.defaultProps = {\n  iconDescription: 'Copy to clipboard',\n  feedback: 'Copied!',\n  feedbackTimeout: 2000,\n  onClick: function onClick() {}\n};","map":null,"metadata":{},"sourceType":"module"}