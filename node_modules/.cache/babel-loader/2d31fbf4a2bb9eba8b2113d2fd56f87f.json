{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nexport function useSelection(_ref) {\n  var disabled = _ref.disabled,\n      onChange = _ref.onChange,\n      _ref$initialSelectedI = _ref.initialSelectedItems,\n      initialSelectedItems = _ref$initialSelectedI === void 0 ? [] : _ref$initialSelectedI;\n  var isMounted = useRef(false);\n  var savedOnChange = useRef(onChange);\n\n  var _useState = useState(initialSelectedItems),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItems = _useState2[0],\n      setSelectedItems = _useState2[1];\n\n  var onItemChange = useCallback(function (item) {\n    if (disabled) {\n      return;\n    }\n\n    var selectedIndex;\n    selectedItems.forEach(function (selectedItem, index) {\n      if (isEqual(selectedItem, item)) {\n        selectedIndex = index;\n      }\n    });\n\n    if (selectedIndex === undefined) {\n      setSelectedItems(function (selectedItems) {\n        return selectedItems.concat(item);\n      });\n      return;\n    }\n\n    setSelectedItems(function (selectedItems) {\n      return removeAtIndex(selectedItems, selectedIndex);\n    });\n  }, [disabled, selectedItems]);\n  var clearSelection = useCallback(function () {\n    if (disabled) {\n      return;\n    }\n\n    setSelectedItems([]);\n  }, [disabled]);\n  useEffect(function () {\n    savedOnChange.current = onChange;\n  }, [onChange]);\n  useEffect(function () {\n    if (isMounted.current === true && savedOnChange.current) {\n      savedOnChange.current({\n        selectedItems: selectedItems\n      });\n    }\n  }, [selectedItems]);\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return {\n    selectedItems: selectedItems,\n    onItemChange: onItemChange,\n    clearSelection: clearSelection\n  };\n}\n\nvar Selection = /*#__PURE__*/function (_React$Component) {\n  _inherits(Selection, _React$Component);\n\n  var _super = _createSuper(Selection);\n\n  function Selection(props) {\n    var _this;\n\n    _classCallCheck(this, Selection);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"internalSetState\", function (stateToSet, callback) {\n      return _this.setState(stateToSet, function () {\n        if (callback) {\n          callback();\n        }\n\n        if (_this.props.onChange) {\n          _this.props.onChange(_this.state);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClearSelection\", function () {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      _this.internalSetState({\n        selectedItems: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectItem\", function (item) {\n      _this.internalSetState(function (state) {\n        return {\n          selectedItems: state.selectedItems.concat(item)\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveItem\", function (index) {\n      _this.internalSetState(function (state) {\n        return {\n          selectedItems: removeAtIndex(state.selectedItems, index)\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnItemChange\", function (item) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      var selectedItems = _this.state.selectedItems;\n      var selectedIndex;\n      selectedItems.forEach(function (selectedItem, index) {\n        if (isEqual(selectedItem, item)) {\n          selectedIndex = index;\n        }\n      });\n\n      if (selectedIndex === undefined) {\n        _this.handleSelectItem(item);\n\n        return;\n      }\n\n      _this.handleRemoveItem(selectedIndex);\n    });\n\n    _this.state = {\n      selectedItems: props.initialSelectedItems\n    };\n    return _this;\n  }\n\n  _createClass(Selection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          render = _this$props.render;\n      var selectedItems = this.state.selectedItems;\n      var renderProps = {\n        selectedItems: selectedItems,\n        onItemChange: this.handleOnItemChange,\n        clearSelection: this.handleClearSelection\n      };\n\n      if (render !== undefined) {\n        return render(renderProps);\n      }\n\n      if (children !== undefined) {\n        return children(renderProps);\n      }\n\n      return null;\n    }\n  }]);\n\n  return Selection;\n}(React.Component); // Generic utility for safely removing an element at a given index from an\n// array.\n\n\n_defineProperty(Selection, \"propTypes\", {\n  children: PropTypes.func,\n  disabled: PropTypes.bool,\n  initialSelectedItems: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  render: PropTypes.func\n});\n\n_defineProperty(Selection, \"defaultProps\", {\n  initialSelectedItems: []\n});\n\nexport { Selection as default };\n\nvar removeAtIndex = function removeAtIndex(array, index) {\n  var result = array.slice();\n  result.splice(index, 1);\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}