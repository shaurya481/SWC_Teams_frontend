{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _types = require(\"../../prop-types/types\");\n\nvar _deprecate = _interopRequireDefault(require(\"../../prop-types/deprecate\"));\n\nvar _events = require(\"../../tools/events\");\n\nvar _keyboard = require(\"../../internal/keyboard\");\n\nvar _useId = require(\"../../internal/useId\");\n\nvar _toggleClass = _interopRequireDefault(require(\"../../tools/toggleClass\"));\n\nvar _FeatureFlags = require(\"../FeatureFlags\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar prefix = _carbonComponents.settings.prefix;\n\nvar Button = /*#__PURE__*/_react.default.forwardRef(function Button(_ref, ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      as = _ref.as,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      small = _ref.small,\n      size = _ref.size,\n      kind = _ref.kind,\n      href = _ref.href,\n      isExpressive = _ref.isExpressive,\n      isSelected = _ref.isSelected,\n      tabIndex = _ref.tabIndex,\n      type = _ref.type,\n      ButtonImageElement = _ref.renderIcon,\n      dangerDescription = _ref.dangerDescription,\n      iconDescription = _ref.iconDescription,\n      hasIconOnly = _ref.hasIconOnly,\n      tooltipPosition = _ref.tooltipPosition,\n      tooltipAlignment = _ref.tooltipAlignment,\n      onClick = _ref.onClick,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      other = _objectWithoutProperties(_ref, [\"children\", \"as\", \"className\", \"disabled\", \"small\", \"size\", \"kind\", \"href\", \"isExpressive\", \"isSelected\", \"tabIndex\", \"type\", \"renderIcon\", \"dangerDescription\", \"iconDescription\", \"hasIconOnly\", \"tooltipPosition\", \"tooltipAlignment\", \"onClick\", \"onBlur\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\"]);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      allowTooltipVisibility = _useState2[0],\n      setAllowTooltipVisibility = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isHovered = _useState4[0],\n      setIsHovered = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isFocused = _useState6[0],\n      setIsFocused = _useState6[1];\n\n  var tooltipRef = (0, _react.useRef)(null);\n  var tooltipTimeout = (0, _react.useRef)(null);\n\n  var closeTooltips = function closeTooltips(evt) {\n    var _document;\n\n    var tooltipNode = (_document = document) === null || _document === void 0 ? void 0 : _document.querySelectorAll(\".\".concat(prefix, \"--tooltip--a11y\"));\n\n    _toConsumableArray(tooltipNode).map(function (node) {\n      (0, _toggleClass.default)(node, \"\".concat(prefix, \"--tooltip--hidden\"), node !== evt.currentTarget);\n    });\n  };\n\n  var handleFocus = function handleFocus(evt) {\n    if (hasIconOnly) {\n      closeTooltips(evt);\n      setIsHovered(!isHovered);\n      setIsFocused(true);\n      setAllowTooltipVisibility(true);\n    }\n  };\n\n  var handleBlur = function handleBlur() {\n    if (hasIconOnly) {\n      setIsHovered(false);\n      setIsFocused(false);\n      setAllowTooltipVisibility(false);\n    }\n  };\n\n  var handleMouseEnter = function handleMouseEnter(evt) {\n    if (hasIconOnly) {\n      setIsHovered(true);\n      tooltipTimeout.current && clearTimeout(tooltipTimeout.current);\n\n      if (evt.target === tooltipRef.current) {\n        setAllowTooltipVisibility(true);\n        return;\n      }\n\n      closeTooltips(evt);\n      setAllowTooltipVisibility(true);\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    if (!isFocused && hasIconOnly) {\n      tooltipTimeout.current = setTimeout(function () {\n        setAllowTooltipVisibility(false);\n        setIsHovered(false);\n      }, 100);\n    }\n  };\n\n  var handleClick = function handleClick(evt) {\n    // Prevent clicks on the tooltip from triggering the button click event\n    if (evt.target === tooltipRef.current) {\n      evt.preventDefault();\n      return;\n    }\n  };\n\n  (0, _react.useEffect)(function () {\n    var handleEscKeyDown = function handleEscKeyDown(event) {\n      if ((0, _keyboard.matches)(event, [_keyboard.keys.Escape])) {\n        setAllowTooltipVisibility(false);\n        setIsHovered(false);\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', handleEscKeyDown);\n    };\n  }, []);\n  var enabled = (0, _FeatureFlags.useFeatureFlag)('enable-v11-release');\n  var buttonClasses = (0, _classnames.default)(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--btn\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--sm\"), size === 'small' && !isExpressive || size === 'sm' && !isExpressive || small && !isExpressive), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--md\"), size === 'field' && !isExpressive || size === 'md' && !isExpressive), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--lg\"), enabled ? size === 'xl' : size === 'lg'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--xl\"), enabled ? size === '2xl' : size === 'xl'), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--\").concat(kind), kind), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--expressive\"), isExpressive), _defineProperty(_classNames, \"\".concat(prefix, \"--tooltip--hidden\"), hasIconOnly && !allowTooltipVisibility), _defineProperty(_classNames, \"\".concat(prefix, \"--tooltip--visible\"), isHovered), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--icon-only\"), hasIconOnly), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--selected\"), hasIconOnly && isSelected && kind === 'ghost'), _defineProperty(_classNames, \"\".concat(prefix, \"--tooltip__trigger\"), hasIconOnly), _defineProperty(_classNames, \"\".concat(prefix, \"--tooltip--a11y\"), hasIconOnly), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--icon-only--\").concat(tooltipPosition), hasIconOnly && tooltipPosition), _defineProperty(_classNames, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), hasIconOnly && tooltipAlignment), _classNames));\n  var commonProps = {\n    tabIndex: tabIndex,\n    className: buttonClasses,\n    ref: ref\n  };\n  var buttonImage = !ButtonImageElement ? null : /*#__PURE__*/_react.default.createElement(ButtonImageElement, {\n    \"aria-label\": iconDescription,\n    className: \"\".concat(prefix, \"--btn__icon\"),\n    \"aria-hidden\": \"true\"\n  });\n  var dangerButtonVariants = ['danger', 'danger--tertiary', 'danger--ghost'];\n  var component = 'button';\n  var assistiveId = (0, _useId.useId)('danger-description');\n  var otherProps = {\n    disabled: disabled,\n    type: type,\n    'aria-describedby': dangerButtonVariants.includes(kind) ? assistiveId : null,\n    'aria-pressed': hasIconOnly && kind === 'ghost' ? isSelected : null\n  };\n  var anchorProps = {\n    href: href\n  };\n  var assistiveText;\n\n  if (hasIconOnly) {\n    assistiveText = /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: tooltipRef,\n      onMouseEnter: handleMouseEnter,\n      className: \"\".concat(prefix, \"--assistive-text\")\n    }, iconDescription);\n  } else if (dangerButtonVariants.includes(kind)) {\n    assistiveText = /*#__PURE__*/_react.default.createElement(\"span\", {\n      id: assistiveId,\n      className: \"\".concat(prefix, \"--visually-hidden\")\n    }, dangerDescription);\n  } else {\n    assistiveText = null;\n  }\n\n  if (as) {\n    component = as;\n    otherProps = _objectSpread(_objectSpread({}, otherProps), anchorProps);\n  } else if (href && !disabled) {\n    component = 'a';\n    otherProps = anchorProps;\n  }\n\n  return /*#__PURE__*/_react.default.createElement(component, _objectSpread(_objectSpread(_objectSpread({\n    onMouseEnter: (0, _events.composeEventHandlers)([onMouseEnter, handleMouseEnter]),\n    onMouseLeave: (0, _events.composeEventHandlers)([onMouseLeave, handleMouseLeave]),\n    onFocus: (0, _events.composeEventHandlers)([onFocus, handleFocus]),\n    onBlur: (0, _events.composeEventHandlers)([onBlur, handleBlur]),\n    onClick: (0, _events.composeEventHandlers)([handleClick, onClick])\n  }, other), commonProps), otherProps), assistiveText, children, buttonImage);\n});\n\nButton.displayName = 'Button';\nButton.propTypes = {\n  /**\n   * Specify how the button itself should be rendered.\n   * Make sure to apply all props to the root node and render children appropriately\n   */\n  as: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.string, _propTypes.default.elementType]),\n\n  /**\n   * Specify the content of your Button\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Specify an optional className to be added to your Button\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Specify the message read by screen readers for the danger button variant\n   */\n  dangerDescription: _propTypes.default.string,\n\n  /**\n   * Specify whether the Button should be disabled, or not\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Specify if the button is an icon-only button\n   */\n  hasIconOnly: _propTypes.default.bool,\n\n  /**\n   * Optionally specify an href for your Button to become an `<a>` element\n   */\n  href: _propTypes.default.string,\n\n  /**\n   * If specifying the `renderIcon` prop, provide a description for that icon that can\n   * be read by screen readers\n   */\n  iconDescription: function iconDescription(props) {\n    if (props.renderIcon && !props.children && !props.iconDescription) {\n      return new Error('renderIcon property specified without also providing an iconDescription property.');\n    }\n\n    return undefined;\n  },\n\n  /**\n   * Specify whether the Button is expressive, or not\n   */\n  isExpressive: _propTypes.default.bool,\n\n  /**\n   * Specify whether the Button is currently selected\n   */\n  isSelected: _propTypes.default.bool,\n\n  /**\n   * Specify the kind of Button you want to create\n   */\n  kind: _propTypes.default.oneOf(_types.ButtonKinds).isRequired,\n\n  /**\n   * Provide an optional function to be called when the button element\n   * loses focus\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * Provide an optional function to be called when the button element\n   * is clicked\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * Provide an optional function to be called when the button element\n   * receives focus\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * Provide an optional function to be called when the mouse\n   * enters the button element\n   */\n  onMouseEnter: _propTypes.default.func,\n\n  /**\n   * Provide an optional function to be called when the mouse\n   * leaves the button element\n   */\n  onMouseLeave: _propTypes.default.func,\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * Optional prop to specify the role of the Button\n   */\n  role: _propTypes.default.string,\n\n  /**\n   * Specify the size of the button, from a list of available sizes.\n   * For `default` buttons, this prop can remain unspecified or use `default`.\n   * In the next major release of Carbon, `default`, `field`, and `small` will be removed\n   */\n  size: _propTypes.default.oneOf(['default', 'field', 'small', 'sm', 'md', 'lg', 'xl', '2xl']),\n\n  /**\n   * Deprecated in v10 in favor of `size`.\n   * Specify whether the Button should be a small variant\n   */\n  small: (0, _deprecate.default)(_propTypes.default.bool, \"\\nThe prop `small` for Button has been deprecated in favor of `size`. Please use `size=\\\"sm\\\"` instead.\"),\n\n  /**\n   * Optional prop to specify the tabIndex of the Button\n   */\n  tabIndex: _propTypes.default.number,\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: _propTypes.default.oneOf(['start', 'center', 'end']),\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: _propTypes.default.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: _propTypes.default.oneOf(['button', 'reset', 'submit'])\n};\nButton.defaultProps = {\n  tabIndex: 0,\n  type: 'button',\n  disabled: false,\n  kind: 'primary',\n  size: 'default',\n  dangerDescription: 'danger',\n  tooltipAlignment: 'center',\n  tooltipPosition: 'top',\n  isExpressive: false\n};\nvar _default = Button;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}