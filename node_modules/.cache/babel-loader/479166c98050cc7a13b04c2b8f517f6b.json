{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar invalidProps = function invalidProps(_ref) {\n  var invalid = _ref.invalid,\n      errorId = _ref.errorId;\n  return {\n    'data-invalid': invalid,\n    'aria-invalid': invalid,\n    'aria-describedby': errorId\n  };\n};\n\nvar warnProps = function warnProps(_ref2) {\n  var warnId = _ref2.warnId;\n  return {\n    'aria-describedby': warnId\n  };\n};\n\nexport var textInputProps = function textInputProps(_ref3) {\n  var invalid = _ref3.invalid,\n      sharedTextInputProps = _ref3.sharedTextInputProps,\n      errorId = _ref3.errorId,\n      warn = _ref3.warn,\n      warnId = _ref3.warnId;\n  return _objectSpread(_objectSpread(_objectSpread({}, sharedTextInputProps), invalid ? invalidProps({\n    invalid: invalid,\n    errorId: errorId\n  }) : {}), !invalid && warn ? warnProps({\n    warnId: warnId\n  }) : {});\n};","map":null,"metadata":{},"sourceType":"module"}