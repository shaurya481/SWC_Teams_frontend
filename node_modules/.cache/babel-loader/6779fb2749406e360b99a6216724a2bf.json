{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2021, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Import portions of React that are needed.\n\n\nimport React from 'react'; // Other standard imports.\n\nimport { arrayOf, shape, string } from 'prop-types';\nimport { pkg\n/*, carbon */\n} from '../../settings'; // Carbon and package components we use.\n\nimport { Link } from 'carbon-components-react'; // The block part of our conventional BEM class names (blockClass__E--M).\n\nvar blockClass = \"\".concat(pkg.prefix, \"--http-errors\");\nvar componentName = 'HTTPErrorContent';\nexport var HTTPErrorContent = function HTTPErrorContent(_ref) {\n  var description = _ref.description,\n      errorCodeLabel = _ref.errorCodeLabel,\n      title = _ref.title,\n      links = _ref.links;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(blockClass, \"__content\")\n  }, errorCodeLabel && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(blockClass, \"__error-code-label\")\n  }, errorCodeLabel), title && /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"\".concat(blockClass, \"__title\")\n  }, title), description && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(blockClass, \"__description\")\n  }, description), links && links.length && links.map(function (link) {\n    return /*#__PURE__*/React.createElement(Link, _extends({}, link, {\n      role: \"link\",\n      href: link.href,\n      key: link.text,\n      className: \"\".concat(blockClass, \"__link\")\n    }), link.text);\n  }));\n}; // The display name of the component, used by React. Note that displayName\n// is used in preference to relying on function.name.\n\nHTTPErrorContent.displayName = componentName; // The types and DocGen commentary for the component props,\n// in alphabetical order (for consistency).\n// See https://www.npmjs.com/package/prop-types#usage.\n\nHTTPErrorContent.propTypes = {\n  /**\n   * String that will provide the description for the HTTP error code\n   */\n  description: string.isRequired,\n\n  /**\n   * String that will describe the error that occurred\n   */\n  errorCodeLabel: string.isRequired,\n\n  /**\n   * Links that will display for extra context when receiving particular errors\n   */\n  links: arrayOf(shape(_objectSpread(_objectSpread({}, Link.propTypes), {}, {\n    /**\n     * The text to display for the link\n     */\n    text: string.isRequired,\n\n    /**\n     * The link's destination\n     */\n    href: string.isRequired\n  }))),\n\n  /**\n   * This will be for the main title of the HTTP error component\n   */\n  title: string.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}