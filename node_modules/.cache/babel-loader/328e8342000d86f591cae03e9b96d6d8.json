{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nimport SkeletonText from '../SkeletonText';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\n\nfunction AccordionSkeleton(_ref) {\n  var align = _ref.align,\n      open = _ref.open,\n      count = _ref.count,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"align\", \"open\", \"count\", \"className\"]);\n\n  var classes = cx(\"\".concat(prefix, \"--accordion\"), \"\".concat(prefix, \"--skeleton\"), className, _defineProperty({}, \"\".concat(prefix, \"--accordion--\").concat(align), align));\n  var numSkeletonItems = open ? count - 1 : count;\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    className: classes\n  }, rest), open && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\".concat(prefix, \"--accordion__item \").concat(prefix, \"--accordion__item--active\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--accordion__heading\")\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    className: \"\".concat(prefix, \"--accordion__title\")\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"90%\"\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"80%\"\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    width: \"95%\"\n  }))), Array.from({\n    length: numSkeletonItems\n  }).map(function (_, i) {\n    return /*#__PURE__*/React.createElement(AccordionSkeletonItem, {\n      key: i\n    });\n  }));\n}\n\nAccordionSkeleton.propTypes = {\n  /**\n   * Specify the alignment of the accordion heading title and chevron.\n   */\n  align: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set number of items to render\n   */\n  count: PropTypes.number,\n\n  /**\n   * `false` to not display the first item opened\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Set unique identifier to generate unique item keys\n   */\n  uid: deprecate(PropTypes.any)\n};\nAccordionSkeleton.defaultProps = {\n  open: true,\n  count: 4,\n  align: 'end'\n};\n\nfunction AccordionSkeletonItem() {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\".concat(prefix, \"--accordion__item\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--accordion__heading\")\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(SkeletonText, {\n    className: \"\".concat(prefix, \"--accordion__title\")\n  })));\n}\n\nexport default AccordionSkeleton;","map":null,"metadata":{},"sourceType":"module"}