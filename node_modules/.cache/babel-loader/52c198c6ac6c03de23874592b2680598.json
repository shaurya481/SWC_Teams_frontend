{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _defineProperty2, _defineProperty3;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nimport { keys, match } from '../../internal/keyboard';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\n\nvar Toggle = /*#__PURE__*/function (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  var _super = _createSuper(Toggle);\n\n  function Toggle() {\n    _classCallCheck(this, Toggle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Toggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          defaultToggled = _this$props.defaultToggled,\n          toggled = _this$props.toggled,\n          _onChange = _this$props.onChange,\n          onToggle = _this$props.onToggle,\n          _this$props$id = _this$props.id,\n          id = _this$props$id === void 0 ? this.inputId = this.inputId || \"__carbon-toggle_\".concat(getInstanceId()) : _this$props$id,\n          labelText = _this$props.labelText,\n          labelA = _this$props.labelA,\n          labelB = _this$props.labelB,\n          size = _this$props.size,\n          other = _objectWithoutProperties(_this$props, [\"className\", \"defaultToggled\", \"toggled\", \"onChange\", \"onToggle\", \"id\", \"labelText\", \"labelA\", \"labelB\", \"size\"]);\n\n      var input;\n      var wrapperClasses = classNames(\"\".concat(prefix, \"--form-item\"), _defineProperty({}, className, className));\n      var toggleClasses = classNames(\"\".concat(prefix, \"--toggle-input\"), _defineProperty({}, \"\".concat(prefix, \"--toggle-input--small\"), size));\n      var checkedProps = {};\n\n      if (typeof toggled !== 'undefined') {\n        checkedProps.checked = toggled;\n      } else {\n        checkedProps.defaultChecked = defaultToggled;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: wrapperClasses\n      }, /*#__PURE__*/React.createElement(\"input\", _extends({}, other, checkedProps, {\n        \"aria-label\": null,\n        type: \"checkbox\",\n        id: id,\n        className: toggleClasses,\n        onChange: function onChange(evt) {\n          _onChange && _onChange(evt);\n          onToggle(input.checked, id, evt);\n        },\n        ref: function ref(el) {\n          input = el;\n        },\n        onKeyUp: function onKeyUp(evt) {\n          if (match(evt, keys.Enter)) {\n            input.checked = !input.checked;\n            _onChange && _onChange(evt);\n            onToggle(input.checked, id, evt);\n          }\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"\".concat(prefix, \"--toggle-input__label\"),\n        htmlFor: id,\n        \"aria-label\": typeof labelText === 'string' ? null : this.props['aria-label']\n      }, labelText, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--toggle__switch\")\n      }, size && /*#__PURE__*/React.createElement(\"svg\", {\n        className: \"\".concat(prefix, \"--toggle__check\"),\n        width: \"6px\",\n        height: \"5px\",\n        viewBox: \"0 0 6 5\"\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M2.2 2.7L5 0 6 1 2.2 5 0 2.7 1 1.5z\"\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--toggle__text--off\"),\n        \"aria-hidden\": \"true\"\n      }, labelA), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"--toggle__text--on\"),\n        \"aria-hidden\": \"true\"\n      }, labelB))));\n    }\n  }]);\n\n  return Toggle;\n}(React.Component);\n\n_defineProperty(Toggle, \"propTypes\", (_defineProperty2 = {}, _defineProperty(_defineProperty2, 'aria-label', PropTypes.string.isRequired), _defineProperty(_defineProperty2, \"className\", PropTypes.string), _defineProperty(_defineProperty2, \"defaultToggled\", PropTypes.bool), _defineProperty(_defineProperty2, \"id\", PropTypes.string.isRequired), _defineProperty(_defineProperty2, \"labelA\", PropTypes.node.isRequired), _defineProperty(_defineProperty2, \"labelB\", PropTypes.node.isRequired), _defineProperty(_defineProperty2, \"labelText\", PropTypes.node), _defineProperty(_defineProperty2, \"onChange\", PropTypes.func), _defineProperty(_defineProperty2, \"onToggle\", PropTypes.func), _defineProperty(_defineProperty2, \"size\", PropTypes.oneOf(['sm', 'md'])), _defineProperty(_defineProperty2, \"toggled\", PropTypes.bool), _defineProperty2));\n\n_defineProperty(Toggle, \"defaultProps\", (_defineProperty3 = {\n  defaultToggled: false\n}, _defineProperty(_defineProperty3, 'aria-label', 'Toggle'), _defineProperty(_defineProperty3, \"labelA\", 'Off'), _defineProperty(_defineProperty3, \"labelB\", 'On'), _defineProperty(_defineProperty3, \"onToggle\", function onToggle() {}), _defineProperty3));\n\nexport default Toggle;","map":null,"metadata":{},"sourceType":"module"}