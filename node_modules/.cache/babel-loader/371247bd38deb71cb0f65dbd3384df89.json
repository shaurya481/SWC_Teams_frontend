{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar prefix = _carbonComponents.settings.prefix;\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\n\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return /*#__PURE__*/_react.default.createElement(\"footer\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? /*#__PURE__*/_react.default.createElement(_iconsReact.Close20, null) : /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronRight20, null)), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: _propTypes.default.string.isRequired,\n  className: _propTypes.default.string,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: _propTypes.default.bool.isRequired,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: _propTypes.default.bool,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: _propTypes.default.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nvar _default = SideNavFooter;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}