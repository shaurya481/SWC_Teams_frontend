{"ast":null,"code":"//\n// Copyright IBM Corp. 2020, 2020\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from 'carbon-components-react';\nimport { ModifiedTabLabelWithClose } from './ModifiedTabLabelWithClose';\nimport { ModifiedTabLabelNew } from './ModifiedTabLabelNew';\nimport { pkg } from '../../settings';\nvar componentName = 'ModifiedTabs';\nexport var ModifiedTabs = function ModifiedTabs(_ref) {\n  var tabs = _ref.tabs,\n      newTabLabel = _ref.newTabLabel,\n      newTabContent = _ref.newTabContent,\n      onNewTab = _ref.onNewTab,\n      onCloseTab = _ref.onCloseTab;\n\n  var handleNewTab = function handleNewTab() {\n    if (onNewTab) {\n      onNewTab();\n      setTimeout(function () {\n        // set focus to the new tab\n        var tab = tabsRef.current.getTabAt(tabs.length);\n\n        if (tab & tab.tabAnchor) {\n          tab.tabAnchor.focus();\n        }\n      });\n    }\n  };\n\n  var handleClose = function handleClose(id) {\n    if (onCloseTab) {\n      onCloseTab(id);\n    }\n  };\n\n  var tabsRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Tabs, {\n    className: \"modified-tabs\",\n    ref: tabsRef\n  }, tabs.map(function (tab) {\n    return /*#__PURE__*/React.createElement(Tab, {\n      id: tab.id,\n      key: tab.id,\n      label: /*#__PURE__*/React.createElement(ModifiedTabLabelWithClose, {\n        label: tab.label,\n        onClose: function onClose() {\n          return handleClose(tab.id);\n        },\n        unsavedContent: tab.unsavedContent\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"some-content\"\n    }, tab.content));\n  }), /*#__PURE__*/React.createElement(Tab, {\n    id: \"modified-tabs__tab-new\",\n    label: /*#__PURE__*/React.createElement(ModifiedTabLabelNew, {\n      label: newTabLabel\n    }),\n    onClick: handleNewTab,\n    onKeyUp: function onKeyUp(ev) {\n      return ev.keyCode === 32 && handleNewTab();\n    },\n    role: \"button\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"some-content\"\n  }, newTabContent)));\n}; // Return a placeholder if not released and not enabled by feature flag\n\nModifiedTabs = pkg.checkComponentEnabled(ModifiedTabs, componentName);\nModifiedTabs.propTypes = {\n  /**\n   * New tab content\n   */\n  newTabContent: PropTypes.object,\n\n  /**\n   * New tab label\n   */\n  newTabLabel: PropTypes.string,\n\n  /**\n   * Optional onCloseTab handler\n   */\n  onCloseTab: PropTypes.func,\n\n  /**\n   * New tab content\n   */\n  onNewTab: PropTypes.func,\n\n  /**\n   * Tabs array containing tab object { id, label, content }\n   */\n  tabs: PropTypes.array\n};\nModifiedTabs.defaultProps = {\n  tabs: [{\n    id: 'tab-1',\n    label: 'Tab 1',\n    content: /*#__PURE__*/React.createElement(\"div\", null, \"Iam am the content of tab 1.\"),\n    unsavedContent: false\n  }],\n  newTabLabel: 'New tab',\n  newTabContent: 'Your new tab will be here soon',\n  onNewTab: undefined,\n  onCloseTab: undefined\n};\nModifiedTabs.displayName = componentName;","map":null,"metadata":{},"sourceType":"module"}