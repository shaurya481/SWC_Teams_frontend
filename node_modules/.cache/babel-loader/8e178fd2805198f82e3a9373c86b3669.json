{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { match, keys } from '../../../internal/keyboard';\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} A Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\n\nexport default (function (config) {\n  return function (fp) {\n    /**\n     * Handles `keydown` event.\n     */\n    var handleKeydown = function handleKeydown(event) {\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n      var target = event.target;\n\n      if (inputFrom === target || inputTo === target) {\n        if (match(event, keys.Enter)) {\n          // Makes sure the hitting enter key picks up pending values of both `<input>`\n          // Workaround for: https://github.com/flatpickr/flatpickr/issues/1942\n          fp.setDate([inputFrom.value, inputTo && inputTo.value], true, fp.config.dateFormat);\n          event.stopPropagation();\n        } else if (match(event, keys.ArrowLeft) || match(event, keys.ArrowRight)) {\n          // Prevents Flatpickr code from canceling the event if left/right arrow keys are hit on `<input>`,\n          // so user can move the keyboard cursor for editing dates\n          // Workaround for: https://github.com/flatpickr/flatpickr/issues/1943\n          event.stopPropagation();\n        } else if (match(event, keys.ArrowDown)) {\n          event.preventDefault();\n          fp.open();\n        }\n      }\n    };\n    /**\n     * Releases event listeners used in this Flatpickr plugin.\n     */\n\n\n    var release = function release() {\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n\n      if (inputTo) {\n        inputTo.removeEventListener('keydown', handleKeydown, true);\n      }\n\n      inputFrom.removeEventListener('keydown', handleKeydown, true);\n    };\n    /**\n     * Sets up event listeners used for this Flatpickr plugin.\n     */\n\n\n    var init = function init() {\n      release();\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n      inputFrom.addEventListener('keydown', handleKeydown, true);\n\n      if (inputTo) {\n        inputTo.addEventListener('keydown', handleKeydown, true);\n      }\n    };\n    /**\n     * Registers this Flatpickr plugin.\n     */\n\n\n    var register = function register() {\n      fp.loadedPlugins.push('carbonFlatpickrFixEventsPlugin');\n    };\n\n    return {\n      onReady: [register, init],\n      onDestroy: [release]\n    };\n  };\n});","map":null,"metadata":{},"sourceType":"module"}