{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar prefix = _carbonComponents.settings.prefix;\n\nvar HeaderSideNavItems = function HeaderSideNavItems(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      hasDivider = _ref.hasDivider;\n  var className = (0, _classnames.default)((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-navigation\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-divider\"), hasDivider), _cx), customClassName);\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: className\n  }, children);\n};\n\nHeaderSideNavItems.propTypes = {\n  /**\n   * The child nodes to be rendered\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Optionally specify if container will have a bottom divider to differentiate\n   * between original sidenav items and header menu items. False by default.\n   */\n  hasDivider: _propTypes.default.bool\n};\nHeaderSideNavItems.defaultProps = {\n  hasDivider: false\n};\nvar _default = HeaderSideNavItems;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}